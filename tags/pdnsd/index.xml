<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>pdnsd on 北落师门</title><link>https://hong.im/tags/pdnsd/</link><description>Recent content in pdnsd on 北落师门</description><generator>Hugo -- gohugo.io</generator><language>zh-CN</language><copyright>This is a customized copyright.</copyright><lastBuildDate>Sun, 16 Mar 2014 21:07:48 +0000</lastBuildDate><atom:link href="https://hong.im/tags/pdnsd/index.xml" rel="self" type="application/rss+xml"/><item><title>配置一台基于openWRT的路由器使用shadowsocks并智能穿墙</title><link>https://hong.im/posts/configure-an-openwrt-based-router-to-use-shadowsocks-and-redirect-foreign-traffic/</link><pubDate>Sun, 16 Mar 2014 21:07:48 +0000</pubDate><guid>https://hong.im/posts/configure-an-openwrt-based-router-to-use-shadowsocks-and-redirect-foreign-traffic/</guid><description>本文开始写作时中使用的路由器为TP-LINK WR841N（D）V7（with openwrt 12.09 稳定版），到这次更新时已经换为了水星 4530R （with openwrt trunk）
在路由器上使用shadowsocks的优势： 0. 效率比较高，在我的不严谨测试中效率比ipsec和pptp都略高。
目前为止比较稳定（较少受到干扰）而且比较安全。 服务器端和客户端的配置都相对来说比较简单，不容易出错。 路由器下面的所有设备都可以0配置自动穿墙，你懂的。 相比goagent（基本阵亡？默哀）而言，要求的包都很小。 劣势 0. 暂时没有发现。（是的。本来的问题我貌似解决了。）
本文的基本目的是在openwrt上使用pdnsd通过tcp查询规避DNS污染，通过iptables转发到端口的功能转发特定流量给跑在路由器上的shadowsocks来访问某些特定IP段达到一定程度无视某墙的存在的目的。
本文分为三个部分： 0. 相关包的安装和shadowsocks的配置
pdnsd的配置 使用iptables对流量进行重定向 在openwrt上安装相关的包并配置shadowsocks 其中shadowsocks我们使用shadowsocks-libev-polarssl（openssl的lib比较大，塞不下……），推荐从这里获取： http://sourceforge.net/projects/openwrt-dist/files/shadowsocks-libev/
然后在路由器端刷新opkg缓存包并安装shadowsocks：
opkg update opkg install shadowsocks-libev-polarssl_1.4.5_ar71xx.ipk 我们还需要安装额外的包，其中我们使用pdnsd（如果后面直接配置dnsmasq转发请求给opendns则不需要）来净化部分国外域名解析，用iptables-mod-nat-extra实现iptables流量转发到端口的功能：
opkg update opkg install pdnsd opkg install pdnsd iptables-mod-nat-extra 我们需要编辑shadowsocks的配置信息 /etc/config/shadowsocks.json（新版默认的配置文件移动到了/etc/shadowsocks.json 不过在后面启动的时候指定就好了，无影响。）： 格式如下：
{ &amp;quot;server&amp;quot;:&amp;quot;[服务器IP地址]&amp;quot;, &amp;quot;server_port&amp;quot;:[服务器端口], &amp;quot;local_port&amp;quot;:[本地端口,稍后iptables会用到], &amp;quot;password&amp;quot;:&amp;quot;[密码]&amp;quot;, &amp;quot;timeout&amp;quot;:600, &amp;quot;method&amp;quot;:&amp;quot;[加密方式]&amp;quot; } 在12.09上shadowsocks会因为缺少libpolarssl.so.3而无法启动，我们可以使用ln“欺骗”一下shadowsocks：
注：我目前一切切换到trunk版本，不知道新版是否还存在这个BUG，请自行测试能否启动。
ln -s /usr/lib/libpolarssl.so /usr/lib/libpolarssl.so.3 配置pdnsd对某些域名进行净化 我采用的基本思路是通过pdnsd使用TCP协议向国外的上级DNS查询而避过DNS污染，然后在本地提供一个1053端口的DNS供dnsmasq使用。如果全局使用pdnsd转发的国外DNS会导致国内某些网站或者服务访问较慢，不推荐。 另外一个思路是使用非标准端口查询，那么就可以不需要配置pdnsd，直接在dnsmasq配置中将相关域名查询请求转发给支持非标准端口的DNS就行了，目前已知的是opendns支持5353端口和443端口。（即在dnsmasq段配置将127.</description></item></channel></rss>