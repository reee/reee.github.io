<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>shadowsocks on 北落师门</title>
    <link>https://hong.im/tags/shadowsocks/</link>
    <description>Recent content in shadowsocks on 北落师门</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>zh-CN</language>
    <copyright>Copyright © 2019, Hong; all rights reserved.</copyright>
    <lastBuildDate>Tue, 08 Jul 2014 15:55:59 +0000</lastBuildDate>
    
	<atom:link href="https://hong.im/tags/shadowsocks/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>使用ipset让openwrt上的shadowsocks更智能的重定向流量</title>
      <link>https://hong.im/2014/07/%E4%BD%BF%E7%94%A8ipset%E8%AE%A9openwrt%E4%B8%8A%E7%9A%84shadowsocks%E6%9B%B4%E6%99%BA%E8%83%BD%E7%9A%84%E9%87%8D%E5%AE%9A%E5%90%91%E6%B5%81%E9%87%8F/</link>
      <pubDate>Tue, 08 Jul 2014 15:55:59 +0000</pubDate>
      
      <guid>https://hong.im/2014/07/%E4%BD%BF%E7%94%A8ipset%E8%AE%A9openwrt%E4%B8%8A%E7%9A%84shadowsocks%E6%9B%B4%E6%99%BA%E8%83%BD%E7%9A%84%E9%87%8D%E5%AE%9A%E5%90%91%E6%B5%81%E9%87%8F/</guid>
      <description>之前看到有人分享通过dnsmasq的ipset功能简化流量重定向试了下发现很不错。这里分享一下。
使用ipset的主要优势在于直接将所有被污染的域名解析结果交给ipset，不需要动态维护IP列表，在路由上更智能。主要适用于访问和谐站点较少，或者较固定的人群。
本文默认为ar71xx平台，并使用openwrt trunk版本，请按照您的需要自行更改。
本文包括三个部分： 0. 安装相应软件包 2. 配置dnsmasq和ipset 3. 【可选】使用pdnsd获取更优的解析结果。 4. DEBUG
一、安装需要的软件包 需要从外部下载以后安装的： shadowsocks：推荐从http://sourceforge.net/projects/openwrt-dist/files/shadowsocks-libev/ 下载。 · 我的做法是下载下来在本地用nginx建一个http服务器，然后在路由器上去wget。另外的普遍做法是用winscp直接上传到路由器，共参考选择。
开始安装：
opkg update //安装前必须更新包数据库缓存。 opkg install ipset iptables-mod-nat-extra opkg install dnsmasq-full --force-overwrite //官方提供的dnsmasq-full提供了ipset相关 的功能，需要加后面的参数进行强制覆盖安装。  某些 版本ipset安装后会报类似下面的错误：
kmod: failed to insert /lib/modules/3.10.44/ip_set.ko kmod: failed to insert /lib/modules/3.10.44/ip_set_bitmap_ip.ko kmod: failed to insert /lib/modules/3.10.44/ip_set_bitmap_ipmac.ko kmod: failed to insert /lib/modules/3.10.44/ip_set_bitmap_port.ko kmod: failed to insert /lib/modules/3.10.44/ip_set_hash_ip.ko kmod: failed to insert /lib/modules/3.10.44/ip_set_hash_ipport.ko kmod: failed to insert /lib/modules/3.</description>
    </item>
    
    <item>
      <title>配置一台基于openWRT的路由器使用shadowsocks并智能穿墙</title>
      <link>https://hong.im/2014/03/%E9%85%8D%E7%BD%AE%E4%B8%80%E5%8F%B0%E5%9F%BA%E4%BA%8Eopenwrt%E7%9A%84%E8%B7%AF%E7%94%B1%E5%99%A8%E4%BD%BF%E7%94%A8shadowsocks%E5%B9%B6%E6%99%BA%E8%83%BD%E7%A9%BF%E5%A2%99/</link>
      <pubDate>Sun, 16 Mar 2014 21:07:48 +0000</pubDate>
      
      <guid>https://hong.im/2014/03/%E9%85%8D%E7%BD%AE%E4%B8%80%E5%8F%B0%E5%9F%BA%E4%BA%8Eopenwrt%E7%9A%84%E8%B7%AF%E7%94%B1%E5%99%A8%E4%BD%BF%E7%94%A8shadowsocks%E5%B9%B6%E6%99%BA%E8%83%BD%E7%A9%BF%E5%A2%99/</guid>
      <description>本文开始写作时中使用的路由器为TP-LINK WR841N（D）V7（with openwrt 12.09 稳定版），到这次更新时已经换为了水星 4530R （with openwrt trunk）
在路由器上使用shadowsocks的优势： 0. 效率比较高，在我的不严谨测试中效率比ipsec和pptp都略高。 1. 目前为止比较稳定（较少受到干扰）而且比较安全。 2. 服务器端和客户端的配置都相对来说比较简单，不容易出错。 3. 路由器下面的所有设备都可以0配置自动穿墙，你懂的。 4. 相比goagent（基本阵亡？默哀）而言，要求的包都很小。
劣势 0. 暂时没有发现。（是的。本来的问题我貌似解决了。）
本文的基本目的是在openwrt上使用pdnsd通过tcp查询规避DNS污染，通过iptables转发到端口的功能转发特定流量给跑在路由器上的shadowsocks来访问某些特定IP段达到一定程度无视某墙的存在的目的。
本文分为三个部分： 0. 相关包的安装和shadowsocks的配置 1. pdnsd的配置 2. 使用iptables对流量进行重定向
在openwrt上安装相关的包并配置shadowsocks 其中shadowsocks我们使用shadowsocks-libev-polarssl（openssl的lib比较大，塞不下……），推荐从这里获取： http://sourceforge.net/projects/openwrt-dist/files/shadowsocks-libev/
然后在路由器端刷新opkg缓存包并安装shadowsocks：
opkg update opkg install shadowsocks-libev-polarssl_1.4.5_ar71xx.ipk  我们还需要安装额外的包，其中我们使用*pdnsd*（如果后面直接配置dnsmasq转发请求给opendns则不需要）来净化部分国外域名解析，用*iptables-mod-nat-extra*实现iptables流量转发到端口的功能：
opkg update opkg install pdnsd opkg install pdnsd iptables-mod-nat-extra  我们需要编辑shadowsocks的配置信息 */etc/config/shadowsocks.json*（新版默认的配置文件移动到了/etc/shadowsocks.json 不过在后面启动的时候指定就好了，无影响。）： 格式如下：
{ &amp;quot;server&amp;quot;:&amp;quot;[服务器IP地址]&amp;quot;, &amp;quot;server_port&amp;quot;:[服务器端口], &amp;quot;local_port&amp;quot;:[本地端口,稍后iptables会用到], &amp;quot;password&amp;quot;:&amp;quot;[密码]&amp;quot;, &amp;quot;timeout&amp;quot;:600, &amp;quot;method&amp;quot;:&amp;quot;[加密方式]&amp;quot; }  在12.09上shadowsocks会因为缺少libpolarssl.so.3而无法启动，我们可以使用ln“欺骗”一下shadowsocks：
注：我目前一切切换到trunk版本，不知道新版是否还存在这个BUG，请自行测试能否启动。
ln -s /usr/lib/libpolarssl.</description>
    </item>
    
  </channel>
</rss>