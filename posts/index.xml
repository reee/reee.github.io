<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Posts on 北落师门</title>
    <link>https://hong.im/posts/</link>
    <description>Recent content in Posts on 北落师门</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>zh-CN</language>
    <copyright>Copyright © 2019, Hong; all rights reserved.</copyright>
    <lastBuildDate>Sun, 18 Aug 2019 21:38:27 +0800</lastBuildDate>
    
	<atom:link href="https://hong.im/posts/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>使用WebDAV来实现远程媒体播放</title>
      <link>https://hong.im/2019/08/%E4%BD%BF%E7%94%A8webdav%E6%9D%A5%E5%AE%9E%E7%8E%B0%E8%BF%9C%E7%A8%8B%E5%AA%92%E4%BD%93%E6%92%AD%E6%94%BE/</link>
      <pubDate>Sun, 18 Aug 2019 21:38:27 +0800</pubDate>
      
      <guid>https://hong.im/2019/08/%E4%BD%BF%E7%94%A8webdav%E6%9D%A5%E5%AE%9E%E7%8E%B0%E8%BF%9C%E7%A8%8B%E5%AA%92%E4%BD%93%E6%92%AD%E6%94%BE/</guid>
      <description>Plex无疑是媒体服务器中的佼佼者。作为一个商业方案，Plex比Emby及其衍生物要更加优雅一些。但是在经历过Plex某个版本会莫名其妙占满单个核心，以及不久前干脆占满所有核心导致整个服务器宕机以后。我决定借WebDAV来实现媒体服务器，而事实证明，效果非常好。
使用WebDAV的优势 利用WebDAV的精髓在于WebDAV可以被挂载为一个本地磁盘，下面的优势其实都是基于这一事实。
 无需转码，因此服务器负担极低  WebDAV可以被映射为一个本地文件夹，调用本地播放器进行播放。因此不管是h.265、wmv或是其他各种奇葩编码方案，通过一个现代的本地播放器都能完美的支持播放，不存在需要转码的情况。而plex大体上是浏览器那一套解码器，绝大多数情况需要被转码为h.264才能开始播放，这就要求服务器本身具有很强的解码能力。使用Plex播放一个非h.264编码的文件，经历的流程为 服务端解码，再编码-客户端再解码播放。而如果使用WebDAV的话，直接在客户端对文件进行解码即可。
使用WebDAV，服务器的负担只有传输数据这一个任务，那么之前的矿渣蜗牛星际的J1900或者各位手中“价值几万”的斐讯N1就都可以轻轻松松串流几路1080P（前提是网络给力）。相对应的，（对于非h.264编码的视频）Plex要么需要GPU支持，要么需要至少i3级别的CPU才能达到实时播放的能力（参考这里： Plex Media Server Requirements ），区别不可谓不大。
这里需要提到另外一个类似WebDAV的文件分享解决方案：FileBrowser 。由于FileBrowser也是通过浏览器提供的服务，因此也存在只要浏览器不能解码，那么该文件就没法播放的问题，局限比较大。
 更快开始播放  Plex在播放开始前需要客户端判断先是否支持该视频，以及判断网络情况，然后再决定是否转码以及转码的码率。如果确实需要转码，还需要一定时间等待一定时间段的视频完成转码。导致Plex需要一定的时间才能开始播放。WebDAV则只需要从服务器端读取数据就可以开始解码播放。因此WebDAV开始播放需要等待的时间要少得多。
特别提醒：考虑到整个视频码率不是一定的，以及网络情况可能会有波动，因此建议通过WebDAV播放视频的，将播放器的缓存视频的时间长度设长一点，整个播放过程会流畅一些。从我的体验来讲，将播放器缓存时间设置为1min，基本上就不会感觉到有卡顿问题。
 可以配合本地的一些其他服务，增强体验  比如 Media Preview 增强缩略图体验。或者使用 Everything 对文件进行快速检索。反正挂载在本地，我就是可以为所欲为。。。
使用WebDAV相对Plex的不足  媒体组织方式的缺陷  Plex毕竟是一个媒体中心，对媒体信息尤其是电影电视剧信息的刮削能力相当强，会自动为文件配上海报简介无需人工干预。这点是WebDAV这个方案无法比的。不过因为我本身对这块要求不高，所以这并不算什么致命的问题。
 文件体积过大以及对高码率文件支持效果欠佳  一部正常的720P电影大概是4G左右，如果直接在移动网络下播放，就是足足4G的流量消耗。另外，一个正常的4K视频码率在50mbps左右，在当前国内的网络环境下，不大可能有人能支持这么高码率视频的实时播放。而Plex因为可以在服务器端进行转码，就可以规避这两个问题。不过1080P视频普遍在10mbps左右，要正常播放并不是什么难事，所以这个缺陷也不算什么问题。
服务器端配置  相关软件的安装  现在一般习惯使用nginx来作为web服务器。通过nginx来提供WebDAV服务，需要加载dav-ext这个第三方模块。下面仅讨论使用nginx提供WebDAV服务的情况。
Ubuntu中，nginx-full这个包自带了dav-ext这个扩展，因此直接安装这个包即可。而arch的话，需要安装 nginx-mainline 和 nginx-mainline-mod-dav-ext。
 WebDAV服务的配置  配置部分可以参考 ArchWiki: WebDAV 。配置过程分为两步：1. 是载入模块。需要注意的是，Ubuntu载入模块的方式略有不同，请参考Ubuntu的相关配置。2.是书写配置文件。由于我们需要面向整个互联网提供服务，因此配置文件需要改变一下，去掉allow，deny字段，然后加上认证部分。我的配置文件供参考：
location /dav { root /srv/http; auth_basic &amp;quot;Auth Require&amp;quot;; auth_basic_user_file /etc/nginx/.htpasswd; dav_methods PUT DELETE MKCOL COPY MOVE; dav_ext_methods PROPFIND OPTIONS; dav_access user:rw group:rw all:r; client_max_body_size 0; create_full_put_path on; client_body_temp_path /srv/client-temp; autoindex on; autoindex_exact_size off; autoindex_localtime on; charset utf-8,gbk; }  配置文件中，是将/srv/http/dav目录分享出来，请按自己情况修改。client_body_temp_path也需要自己根据实际情况修改。另外.</description>
    </item>
    
    <item>
      <title>Qbittorrent vs Transmission vs Rtorrent</title>
      <link>https://hong.im/2019/08/qbittorrent-vs-transmission-vs-rtorrent/</link>
      <pubDate>Fri, 16 Aug 2019 12:33:19 +0800</pubDate>
      
      <guid>https://hong.im/2019/08/qbittorrent-vs-transmission-vs-rtorrent/</guid>
      <description>一直在来回倒腾这三个客户端，所以很早就想写个总结。然后终于写出来了- 。-
基础对比  资源占用以及下载效率： rtorrent &amp;gt; qbittorrent &amp;gt; transmission。  在种子数比较少（大概1000以下）的情况下，rtorrent和qbittorrent的表现差别不是很大。根据其他人测试的数据，在种子数特别多的情况下，rtorrent能跟qbittorrent拉开差距。transmission的效率则最低，在我当前150mbps的环境下，rtorrent和qbittorrent能迅速占满带宽。而transmission即使占满带宽流量曲线也并不平滑，有比较大的波动。
 配置难度：rtorrent &amp;gt;&amp;gt; transmission &amp;gt; qbittorrent。  rtorrent之所以难配置的主要原因在于后端（rtorrent）和前端( ruTorrent 或 Flood )分别都需要配置。比较好的是，从0.9.7开始rtorrent开始支持demon mode，相对之前版本要更好配置一些（老版本需要把rtorrent跑在tmux或者screen里面）。transmission由单一配置文件控制，直接编辑文件就能完成配置。而qbittorrent的绝大多数配置可以通过webUI完成，难度相对来说比transmission还要更低一些。但是——qbittorrent默认没有提供systemd的service文件，需要自己写一个，不过难度不大。另外需要注意的是Archlinux在装rtorrent和qbittorrent（仅远程使用的时候，安装qbittorrent-nox就可以）的时候，由于这两个软件本身对daemon模式支持不好，所以软件包本身不会添加相关用户，需要自己添加。
 稳定性  从我使用的情况来看，qbittorrent相对来说稳定性要差一些，transmission稳定性尚可，rtorrent理论上来讲应该是最稳定。不过考虑到qbittorrent开发非常活跃，不稳定也是预料之中的事情。
其他方面  WebUI相关。这个比好直接给结论，分开说吧。  单论特性的丰富程度，rtorrent(与ruTorrent配合，后面简称rutorrent)要远远优于后两者。rutorrent支持媒体文件自动截图，自动解压，查看媒体信息等等。你甚至可以直接通过rutorrent把种子文件下载到本机。可以看出来，rutorrent的主要设计宗旨就是为了在服务器上大量的做种而设计的。 另外，rtorrent的两个主流webUI（rutorrent和flood）对移动端支持都很不错。不过比较可惜的是，不管是rutorrent和flood都不支持批量添加种子文件。
qbittorrent的webUI特性也比较丰富。你甚至可以通过qbittorrent的webUI完成ddns更新（虽然我不知道有什么意义……）。qbittorrent WebUI的最大问题是不（tai）好（chou）看，感觉像上一代的网页，毫无设计感。另外qbittorrent的移动版页面也相当不好用。qbittorrent的webUI的另一个问题在于不支持对种子内容进行排序，也没有层级结构，在筛选大包里面的文件的时候相当不便。
transmission比较特殊。它自带的webUI功能极少，但是可以改为 transmission-web-control 。transmission-web-control 的特性基本跟qbittorrent相当，但是比qbittorrent的漂亮很多。不过不管是transmission自带的webUI还是transmission-web-control本身都不支持https，而且如果用nginx代理的话，则transmission就不能设置密码，只能通过nginx控制。
另外，transmission可以通过第三方的跨平台远程控制客户端 transgui 控制。transgui支持文件关联，你完全可以像操作本机上的transmission一样控制远程服务器上的transmission，这点上看，完爆前面两个。
 其他方面  三个客户端里面只有rtorrent不支持在未完成文件后面添加后缀，如果配合Plex等流媒体服务，会带来一些困扰。另外，qbittorrent针对大包里面没有选中的文件，会放入一个隐藏文件夹中，这里特别好评。顺便说下，其实这三个软件在安卓上都有第三方客户端可以支持，但是只有Transmission的客户端功能最全。
另外，这三个包如果都最小安装的话，qbittorrent的依赖最多，安装后所占体积最大，让人感觉不够优雅。
最后，之所以没有讨论deluge，主要是国内一些主流的PT站点并不支持deluge，且deluge也已经停止开发好长时间了。而没有讨论utorrent的主要原因是，我目前的主要平台是Linux，目前为止utorrent还没有Linux下的客户端。
综上，下面列一个表吧：
   - rtorrent qbittorrent transmission     资源占用及下载效率 最优 优 略差   配置难度 最难 较简单 较简单   稳定性 稳定 较不稳定 稳定   移动端支持（WebUI） 良好 较差 尚可   批量添加种子（WebUI） 不支持 支持 支持   HTTPS支持（WebUI） 通过Web服务器支持 原生支持、也可通过Web服务器支持 如果使用Web服务器代理，则UI本身不能设有密码   WebUI综合评价 优秀 较差 原生WebUI较差，transmission-web-control 优秀   种子包内容控制 分文件夹，可按属性排序 不分文件夹，不可排序 分文件夹，可按属性排序   为未完成文件添加后缀 不支持 支持 支持   Android客户端 功能少 功能少 功能完备   Windows客户端 无 无 功能完备    事实上，如果喜欢按挑三拣四的模式下大包或者对速度和资源占用要求没那么高，Transmission是最佳选择。如果有大批量发布种子的需求，那么rtorrent则是最佳选择。如果追求速度，不希望太操心，那可以试试qbittorrent。</description>
    </item>
    
    <item>
      <title>在centOS 7上面，从源码包重新编译软件包</title>
      <link>https://hong.im/2015/12/%E5%9C%A8centos-7%E4%B8%8A%E9%9D%A2%E4%BB%8E%E6%BA%90%E7%A0%81%E5%8C%85%E9%87%8D%E6%96%B0%E7%BC%96%E8%AF%91%E8%BD%AF%E4%BB%B6%E5%8C%85/</link>
      <pubDate>Sun, 27 Dec 2015 11:32:36 +0000</pubDate>
      
      <guid>https://hong.im/2015/12/%E5%9C%A8centos-7%E4%B8%8A%E9%9D%A2%E4%BB%8E%E6%BA%90%E7%A0%81%E5%8C%85%E9%87%8D%E6%96%B0%E7%BC%96%E8%AF%91%E8%BD%AF%E4%BB%B6%E5%8C%85/</guid>
      <description>众所周知，ocserv需要重新编译才能支持比较详细的路由设置。这里简单总结一下如何在centOS 7 上面，从srpm出发，重新编译RPM包。
基本参考的资料就是官方的构建环境搭建指南和RPM重构指南： https://wiki.centos.org/HowTos/SetupRpmBuildEnvironment https://wiki.centos.org/HowTos/RebuildSRPM
搭建构建环境  首先安装必备的软件包：
yum install rpm-build redhat-rpm-config make gcc
 建立相应的用户，并切换到相应用户：
user add mockbuild su mockbuild
  需要注意的是，官方建议不使用root账户来进行编译，而看起来EPEL默认的编译用户是mockbuild，上一步建立任意非root账户其实也可以但是可能会在安装srpm的时候遇到类似于下面的警告：
warning: user mockbuild does not exist - using root warning: group mockbuild does not exist - using root  从个人实践的情况来看，似乎上面的警告也不会影响最后的编译，所以看你自己咯。
 建立相应的文件夹：
mkdir -p ~/rpmbuild/{BUILD,RPMS,SOURCES,SPECS,SRPMS}
 设定RPM build变量：
echo &amp;lsquo;%_topdir %(echo $HOME)/rpmbuild&amp;rsquo; &amp;gt; ~/.rpmmacros
  取得源代码包进行重编译 以epel为例，可以从这里取得对应的SRPM： https://dl.fedoraproject.org/pub/epel/7/SRPMS/
将对应的SRPM下载下来，然后使用rpm进行安装：
rpm -i /path/to/the/rpm  相关的文件会被解压到上一步新建的文件夹。</description>
    </item>
    
    <item>
      <title>亲身经历某地区医院的医疗事故，说一下看法和不满。</title>
      <link>https://hong.im/2014/09/%E4%BA%B2%E8%BA%AB%E7%BB%8F%E5%8E%86%E6%9F%90%E5%9C%B0%E5%8C%BA%E5%8C%BB%E9%99%A2%E7%9A%84%E5%8C%BB%E7%96%97%E4%BA%8B%E6%95%85%E8%AF%B4%E4%B8%80%E4%B8%8B%E7%9C%8B%E6%B3%95%E5%92%8C%E4%B8%8D%E6%BB%A1/</link>
      <pubDate>Thu, 04 Sep 2014 17:46:24 +0000</pubDate>
      
      <guid>https://hong.im/2014/09/%E4%BA%B2%E8%BA%AB%E7%BB%8F%E5%8E%86%E6%9F%90%E5%9C%B0%E5%8C%BA%E5%8C%BB%E9%99%A2%E7%9A%84%E5%8C%BB%E7%96%97%E4%BA%8B%E6%95%85%E8%AF%B4%E4%B8%80%E4%B8%8B%E7%9C%8B%E6%B3%95%E5%92%8C%E4%B8%8D%E6%BB%A1/</guid>
      <description>我希望能尽量以比较客观的态度来谈论这件事情。
事情经过： 我妈妈因为子宫肌瘤在8月4号，于本区的地区中心医院妇科，也是本区唯一的三甲医院完成了子宫肌瘤切除手术。完成手术后，主治医生把纱布遗留在我妈妈体内（似乎是子宫附近，非医疗专业不是很确定），造成8月4号至9月1号期间我妈妈一直有恶臭分泌物，浑身无力（严重到吃饭的时候没有力气把碗端起来，只能拿的动筷子，期间几乎没法上台阶。），且浑身疼痛。反正我在家那两天休息的很差，身体状况非常糟糕，而且据说我走以后情况还继续恶化。
因为身体不适，我妈妈在8月21日到该医院复查，该医院没发现这个问题，而是给我妈开了治疗胃疼的药。
于9月1日，我妈妈在另外一个医院被发现纱布，并取出，现在恢复已经非常良好。（所以我才能有闲暇在这里发这个博文）。
我要说一下的是，在手术前，我已经咨询了我一个同学和一个师姐得到的答复是这是一个小手术，而且某医院是本区最好的医院啊。所以才放心的让我妈妈在该医院完成手术，根本没有任何会出现这种事故的心理准备。
对该院的看法和不满  首先声明，我对该主刀医师并没有特别大意见。作为一个搞化学的，我很明白实验多了都会有误差，手术多了肯定可能出现误差，难以避免。而且出了这个事故我相信她也并不好过，之后也不会好过。
 我认为该院至少手术管理流程上有一定问题。因为三块纱布并不是小东西，如果手术流程规范，我认为应该能尽量避免的。
 我认为要么该院复查流程不够规范，要么是主管医师责任心不够。 该院在我妈明确表明是手术后不适，恢复时间远超于预期（据说做了这个手术的阿姨说她在7天左右基本恢复，复查时我妈妈距离手术已经半个多月），病情非常严重的情况下（参看前面），且复查时通过B超发现子宫附件有大块阴影，报告医师后，被简单的处理成了子宫肌瘤未切除完（我妈妈在手术室呆了3个多小时，因为血糖升高，血钠失衡被提前中断手术，未完全完成手术）。
 该医院某些医生态度非常有问题。21号我妈去医院复查时，由于我在自动挂号机上挂的号，而那台挂号机因为故障没有吐出回执。在大厅询问导医MM得到没有影响的明确答复后到该院319门诊检查。因为妇科的原因，我没法陪同。结果我妈妈因为没有挂号的回执（和没有按要求排队？这个是我猜测的）被该医生呵斥了出来（同样是猜测，非常抱歉）。但是换成大家。看到一个刚才上楼梯都没力气，两楼走了10多20分钟路的人，而且是亲身母亲，一而再再二三的从诊室委屈的走出来是什么感觉！总之我当时非常生气！
  在我有点生气的冲进去以后，询问之后该医生不耐烦的说，没看到我很忙么（那里确实很多人，但是都是年轻女人啊！！），不会好好排队么？
我承认，我母亲确实是没有按规矩，但是您作为一个医师，不能好言提醒让她排队吗？态度不能稍微好一点么？至少指出是什么问题我们好解决啊！
 该医院某领导沟通能力极差。在确认是该医院引起的医疗事故后，我陪同我父母到该医院协商赔偿的事情。妇科某吴姓主任接待的我们。某些言论让我作为一个家属非常不舒服。  首先，在主刀医师在场，且已经默认的情况下，该主任大量强调：1. 这个手术几乎不可能会用到纱布，所以几乎不可能会出现纱布遗留（我对这段的理解是，我不是很相信你们，你们是不是搞错了？或者不会是要来讹我们钱吧）。2. 我们医院也感到抱歉，但是这种事情我们医院经常遇到（反正我对这段的理解是所以我抱歉的也很有限度。）在我们没有提起前，绝口不谈赔偿的事情。我觉得我们应该佩服中国某些人打太极的能力，就这么一些话，这个主任说了1个小时左右（这个时间回忆得到，可能受主观影响，并不精确）
其次，在讨论赔偿的时候。我因为没有对应的经验（我祝福看博客的各位都不要有），一早在家根据《医疗事故处理条例》草拟了一份大概的赔偿协议，因为相关知识不足，把我母亲和父亲的误工费，陪护费基准定为了非私营企业城镇居民平均工资，是偏高的。合计约8000的样子（严格按法律条款算下来我父亲没有陪护费，大约2000多的样子）。但是后面综合实际情况：我母亲延缓一个月愈合，我父亲额外的一个月陪护，和相应的对我母亲造成的痛苦。我个人认为这个金额是协商应该得到的金额。
而该主任在我拿出这个单子以后，一直强调：1. 根据法律条款，我父亲不应该得到陪护费。医院可以考虑考虑（“但是我就是不很想给”）。2. 根据法律条款，我父亲母亲的这两个基准都高了，是没法商量的。
我想说的是，根据法律条款，确实不应该付这些钱（顺便说下，这个《医疗事故处理条例》目前意见也很大，见这里： 《医疗事故处理条例》当休矣 ），但是协商的目的是什么，是想根据道义得到补偿啊。是我们已经认为某医院能够吸取教训减少这类事情的发生，避免对医院造成其他影响啊。既然没有人情味，要按法律走，还何必协商呢？
最后，该医生的其他言论让我回想起来，总结就是你们大约是乡下人想来闹一闹要点钱，我这种经过大风大浪的人怎么会让你们得逞（原话：我吴某人当了20多年主任，在重庆地区也是有头有脸的人，经常处理这类事故）。注：该段主观感受很重，请自行选择忽略。
以上，所以我认为现在医闹这么严重，某些医生也是需要负起责任的。</description>
    </item>
    
    <item>
      <title>使用ipset让openwrt上的shadowsocks更智能的重定向流量</title>
      <link>https://hong.im/2014/07/%E4%BD%BF%E7%94%A8ipset%E8%AE%A9openwrt%E4%B8%8A%E7%9A%84shadowsocks%E6%9B%B4%E6%99%BA%E8%83%BD%E7%9A%84%E9%87%8D%E5%AE%9A%E5%90%91%E6%B5%81%E9%87%8F/</link>
      <pubDate>Tue, 08 Jul 2014 15:55:59 +0000</pubDate>
      
      <guid>https://hong.im/2014/07/%E4%BD%BF%E7%94%A8ipset%E8%AE%A9openwrt%E4%B8%8A%E7%9A%84shadowsocks%E6%9B%B4%E6%99%BA%E8%83%BD%E7%9A%84%E9%87%8D%E5%AE%9A%E5%90%91%E6%B5%81%E9%87%8F/</guid>
      <description>之前看到有人分享通过dnsmasq的ipset功能简化流量重定向试了下发现很不错。这里分享一下。
使用ipset的主要优势在于直接将所有被污染的域名解析结果交给ipset，不需要动态维护IP列表，在路由上更智能。主要适用于访问和谐站点较少，或者较固定的人群。
本文默认为ar71xx平台，并使用openwrt trunk版本，请按照您的需要自行更改。
本文包括三个部分： 0. 安装相应软件包 2. 配置dnsmasq和ipset 3. 【可选】使用pdnsd获取更优的解析结果。 4. DEBUG
一、安装需要的软件包 需要从外部下载以后安装的： shadowsocks：推荐从http://sourceforge.net/projects/openwrt-dist/files/shadowsocks-libev/ 下载。 · 我的做法是下载下来在本地用nginx建一个http服务器，然后在路由器上去wget。另外的普遍做法是用winscp直接上传到路由器，共参考选择。
开始安装：
opkg update //安装前必须更新包数据库缓存。 opkg install ipset iptables-mod-nat-extra opkg install dnsmasq-full --force-overwrite //官方提供的dnsmasq-full提供了ipset相关 的功能，需要加后面的参数进行强制覆盖安装。  某些 版本ipset安装后会报类似下面的错误：
kmod: failed to insert /lib/modules/3.10.44/ip_set.ko kmod: failed to insert /lib/modules/3.10.44/ip_set_bitmap_ip.ko kmod: failed to insert /lib/modules/3.10.44/ip_set_bitmap_ipmac.ko kmod: failed to insert /lib/modules/3.10.44/ip_set_bitmap_port.ko kmod: failed to insert /lib/modules/3.10.44/ip_set_hash_ip.ko kmod: failed to insert /lib/modules/3.10.44/ip_set_hash_ipport.ko kmod: failed to insert /lib/modules/3.</description>
    </item>
    
    <item>
      <title>配置一台基于openWRT的路由器使用shadowsocks并智能穿墙</title>
      <link>https://hong.im/2014/03/%E9%85%8D%E7%BD%AE%E4%B8%80%E5%8F%B0%E5%9F%BA%E4%BA%8Eopenwrt%E7%9A%84%E8%B7%AF%E7%94%B1%E5%99%A8%E4%BD%BF%E7%94%A8shadowsocks%E5%B9%B6%E6%99%BA%E8%83%BD%E7%A9%BF%E5%A2%99/</link>
      <pubDate>Sun, 16 Mar 2014 21:07:48 +0000</pubDate>
      
      <guid>https://hong.im/2014/03/%E9%85%8D%E7%BD%AE%E4%B8%80%E5%8F%B0%E5%9F%BA%E4%BA%8Eopenwrt%E7%9A%84%E8%B7%AF%E7%94%B1%E5%99%A8%E4%BD%BF%E7%94%A8shadowsocks%E5%B9%B6%E6%99%BA%E8%83%BD%E7%A9%BF%E5%A2%99/</guid>
      <description>本文开始写作时中使用的路由器为TP-LINK WR841N（D）V7（with openwrt 12.09 稳定版），到这次更新时已经换为了水星 4530R （with openwrt trunk）
在路由器上使用shadowsocks的优势： 0. 效率比较高，在我的不严谨测试中效率比ipsec和pptp都略高。 1. 目前为止比较稳定（较少受到干扰）而且比较安全。 2. 服务器端和客户端的配置都相对来说比较简单，不容易出错。 3. 路由器下面的所有设备都可以0配置自动穿墙，你懂的。 4. 相比goagent（基本阵亡？默哀）而言，要求的包都很小。
劣势 0. 暂时没有发现。（是的。本来的问题我貌似解决了。）
本文的基本目的是在openwrt上使用pdnsd通过tcp查询规避DNS污染，通过iptables转发到端口的功能转发特定流量给跑在路由器上的shadowsocks来访问某些特定IP段达到一定程度无视某墙的存在的目的。
本文分为三个部分： 0. 相关包的安装和shadowsocks的配置 1. pdnsd的配置 2. 使用iptables对流量进行重定向
在openwrt上安装相关的包并配置shadowsocks 其中shadowsocks我们使用shadowsocks-libev-polarssl（openssl的lib比较大，塞不下……），推荐从这里获取： http://sourceforge.net/projects/openwrt-dist/files/shadowsocks-libev/
然后在路由器端刷新opkg缓存包并安装shadowsocks：
opkg update opkg install shadowsocks-libev-polarssl_1.4.5_ar71xx.ipk  我们还需要安装额外的包，其中我们使用*pdnsd*（如果后面直接配置dnsmasq转发请求给opendns则不需要）来净化部分国外域名解析，用*iptables-mod-nat-extra*实现iptables流量转发到端口的功能：
opkg update opkg install pdnsd opkg install pdnsd iptables-mod-nat-extra  我们需要编辑shadowsocks的配置信息 */etc/config/shadowsocks.json*（新版默认的配置文件移动到了/etc/shadowsocks.json 不过在后面启动的时候指定就好了，无影响。）： 格式如下：
{ &amp;quot;server&amp;quot;:&amp;quot;[服务器IP地址]&amp;quot;, &amp;quot;server_port&amp;quot;:[服务器端口], &amp;quot;local_port&amp;quot;:[本地端口,稍后iptables会用到], &amp;quot;password&amp;quot;:&amp;quot;[密码]&amp;quot;, &amp;quot;timeout&amp;quot;:600, &amp;quot;method&amp;quot;:&amp;quot;[加密方式]&amp;quot; }  在12.09上shadowsocks会因为缺少libpolarssl.so.3而无法启动，我们可以使用ln“欺骗”一下shadowsocks：
注：我目前一切切换到trunk版本，不知道新版是否还存在这个BUG，请自行测试能否启动。
ln -s /usr/lib/libpolarssl.</description>
    </item>
    
    <item>
      <title>如是我闻</title>
      <link>https://hong.im/2014/02/%E5%A6%82%E6%98%AF%E6%88%91%E9%97%BB/</link>
      <pubDate>Wed, 26 Feb 2014 22:26:09 +0000</pubDate>
      
      <guid>https://hong.im/2014/02/%E5%A6%82%E6%98%AF%E6%88%91%E9%97%BB/</guid>
      <description>还在县城的时候，就听说村长去世了。不过直到回到老家，看到田野上的那个土石垒起来的小包，盖满的花圈被雨水淋过，只剩一片惨白。在坟包的不远处散落一地火炮纸红的刺眼。我才算是有了真真切切的认识。
我母亲给我说，你看，村长就埋在那里。
村长是一个怎样的人呢？在我印象中，给我的感觉一直是邋邋遢遢的样子，他身上的衣服破旧不说，还总是给人一种没洗干净的样子。他的女人，跟他一样，穿的破破烂烂。鼻涕流出来，用手横着一下就擦掉了。用我们那的话说，叫打“huan（横）锤”。村长夫人总是两只手拖着她的孙子，也不管她孙子舒不舒服。她的孙子的衣服也是很脏，衣服“像覆了一层黑锅巴”。但是她的孙子有一双很特别的眼睛，黑的发亮。每次被那双眼睛看到，都觉得好像被他看穿了前生后世，因果轮回。
虽然似乎没什么权利，但是村长却是村里不可或缺的一号人物。每次村里要办什么红白喜事，人事分配统统由他来完成。总是回想起他在浑浊不清的广播里面说“我念一下帮忙打杂的人些……”
以前一直幻想，在他的葬礼上，会是谁来为他安排人事呢。可惜我却是错过了。不过春节回家却是遇到了另一家办生辰酒席。才知道村里面早已经选出了新的村长，于是广播虽然同样浑浊不清，但却换了一个声音。
我是谁？ 在过去的时间里面，我时常陷入一个问题，“我是谁”？
我是谁？作为“我”却很难回答这个问题。
我有指代我的名字，在社会里面完成我的工作，回到家，跟一群人维系家庭成员关系。这似乎就是我了。但是我是我的名字吗？不是。我是我的工作吗？显然不是。我是我在家里面的位置吗？当然也不是！但是我显然存在在这个世界上。这是我问出这个问题的前提。
我曾经构想过这样一个问题。如果写一个小程序。他的唯一的功能就是在人们调用它的时候返回它的名字。
“你好，我是一个程式，我的名字叫程式”。
那它是不是它呢？或者说，它有没有意识到“自我”的存在呢。
看起来，“我”似乎从来不曾存在，”我“又似乎无处不在。
而且我似乎也不是过去的我。哲学上有一个很著名的悖论，叫做忒修斯之船：
 忒修斯与雅典的年轻人们自克里特岛归还时所搭的30桨船被雅典的人留下来做为纪念碑，随着时间过去；木材也逐渐腐朽，而雅典的人便会更换新的木头来替代。最后，该船的每根木头都被换过了；因此，古希腊的哲学家们就开始问著：“这艘船还是原本的那艘忒修斯之船吗？如果是，但它已经没有最初的任何一根木头了；如果不是，那它是从什么时候不是的？”
 这样看来我已经跟昨天不一样了。我还是我么？
我不能再次踏入同一条河。不光是河变了，我也变了。
我可能不是过去的我，我可能甚至都不是我。我被世界改变，我可能自己也在改变。但是我却依然是我。我努力的满足“我”，取悦“我”。我所做的一切，都是因为”我“。”我“在努力的影响整个世界。宣告我的存在。包括写下这篇蛋疼的文章。
我存在吗？ 我的存在似乎也是一个伪命题。或许我现在还可以通过与社会交互，来表达”我存在在这个世界上“。然而当我终于化为以抔黄土，时间终于会洗刷掉我存在的证据。我曾经存在？或许吧。可惜没有任何人可以来为我证明。如果我们再把眼光放远一点，太阳系也终于走向终点，人类的文明——至少在地球的文明不复存在。恐怕那个时候不光是我们，就是如今，或者过去的”伟人“，存在的证据也会被抹煞一空。
就像是小的时候，我总喜欢在课桌的缝里，小学破败的土墙缝里，塞上一些自己写的字条。盼望有一天有人会发现。而现在回过头去，不光自己写了什么不记得了，那时候的小学校已经被推平，学校的那株大树也被砍掉，修了漂亮的新的村办公室。再也看不到过去的半点痕迹。
就像是门前的那条小河。我还记得小时候里面鱼虾成群，某天放学的我还有捡到一条搁浅的小鱼。现在却被山上修公路冲下来的泥石填平。还记得小时候在里面翻开石头找寻里面可能出现的铜钱。那一片片铜钱被时光腐蚀磨损，只剩下一片片残破。前朝的遗迹就这样被时光碾压。而被我们翻动的那些石块，静静的被新的泥沙压在底下，等待成为新的历史。
回过头来，多像是幻梦一场。佛教云”色即是空，空即是色“。有即是无，无即是有。所以存在终于也会变成不存在，不存在，也可以是曾经存在。彼岸花开，红粉骷髅。或者根本就是幻梦一场，我们其实生活在一个虚拟的世界。到头来一觉醒来，南柯一梦。
我想起《三体》中，人类文明的纪念碑，黑黝黝的孤零零的高耸如云。可惜最终也随着地球跌落到二维空间。所以纪念碑也终会消失吧。那为何还要纪念呢。
或许吧，在宇宙的边缘，有一个恒星孤零零的死去，爆发的灿烂用了几万亿年，穿越几万亿光年，终于来到你的跟前。本来仰望天空的你却低头去看那春天的花，开的肆无忌惮。于是一不小心，错过了它的那么长的旅程，那么久的跋涉。
不过我想我毕竟是存在的吧——即使可能很多人并没有察觉到这个事实，以后也可能没多少人记得这个事实。
也许是虚无缥缈，但是我现在感觉到我自己存在啊，心脏在随着春天的节奏跳动啊，血液在血管里面汹涌澎湃啊。真好。
如果真有海枯石烂——或许吧。我还真是希望我身上能有一个原子，能够躲过那么多次的撞击，保持现在的样子，为了向这个世界咏叹呢。</description>
    </item>
    
    <item>
      <title>时光·漫步</title>
      <link>https://hong.im/2013/12/%E6%97%B6%E5%85%89%E6%BC%AB%E6%AD%A5/</link>
      <pubDate>Sun, 15 Dec 2013 23:56:07 +0000</pubDate>
      
      <guid>https://hong.im/2013/12/%E6%97%B6%E5%85%89%E6%BC%AB%E6%AD%A5/</guid>
      <description>还记得在高中的时候，特别喜欢在黄昏时候，倚着窗户，看着外面的高楼大厦。
彩灯一个个打开，点亮各种建筑的轮廓。然后又关闭，再打开。像天上的星星一样，一闪一闪。
后来去很远的地方读大学，坐着火车，穿越崇山峻岭，然后突然就看到了窗外亮起了点点的昏黄灯光，点缀在漆黑的夜幕下。
突然就有很温暖的感觉。宁静而又祥和。
特别喜欢一个人走在陌生的城市，看着陌生的人，做着应该他们去完成的事情。可是我应该做些什么事情呢，不，我只需要安安静静的看着就好了。
其实想要化作风，轻抚每一个遇到的脸庞，不管是稚嫩的咿呀学语，被岁月侵蚀的满面鬓霜还是英姿勃发，不可一世。 想要变成雨，从天空慢慢的落到下面的人身上，不管他/她是在发愁明天的柴木油盐酱醋茶，还是只是在苦恼，待回的聚会到底穿哪双鞋才好。 就让我变成空气吧，静静的旁观这世界的冷漠，欢乐，愤怒，幸福和哀伤。
我遇见很多人。 我错过很多人。 我忘记很多人。 我记起很多人。
那个时候的我们，因为某些原因聚集到一起，而如今的我们，又因为某些原因，四散天涯。
细细回想，却又想不起初识的场景，再也记不得那时的模样。
那是懵懵懂懂，小心翼翼的模样。 那时豪情万丈，充满幻想的模样。 而我已经快忘了，很久以前那个，卑微，做什么都畏畏缩缩的我了。
一定有更好的风景在远处等我，你说是吧。
因为错过的东西，始终就是错过了吧。
只是，却不知，今夕何夕。</description>
    </item>
    
    <item>
      <title>雨一直下</title>
      <link>https://hong.im/2013/12/%E9%9B%A8%E4%B8%80%E7%9B%B4%E4%B8%8B/</link>
      <pubDate>Sun, 15 Dec 2013 15:43:36 +0000</pubDate>
      
      <guid>https://hong.im/2013/12/%E9%9B%A8%E4%B8%80%E7%9B%B4%E4%B8%8B/</guid>
      <description>一个人撑着伞走在雨中，看着冰冷的雨下在这个冰冷的世界。
我看到石护栏上的苔藓，在辛苦的生长，即使在这个寒冷的冬天，也努力的要绽放出一点不一样的色彩。
即使无人为它喝彩，甚至连偶尔眼神的逗留都欠奉。
冰冷的风吹来，街道如一潭死水一般波澜不惊。
只有突然从身旁跑过的嬉闹的似乎永远精力充沛，不知疲倦的小朋友，以前在街边被冻得鼻子通红，却没人光顾的小贩。
还有牵着一条土狗，身上穿着不知道裹了几层泥浆的流浪汉，和带着一身疲惫，老眼浑浊，亦步亦趋的老人。
打破了这个世界的死寂。
而我的脑袋里面却什么都没有想，我懒得对这个世界做出任何回应。
上一次像疯子一样在全城乱跑还是高中的事情，那个时候觉得这个县城好大，好复杂，觉的高中也好大，好复杂。跟同学一起，也不坐公交车，就像两只没头苍蝇，到处乱窜。希望可以借以排除掉心中的不安，与彷徨。
转眼间，同学已经去了云南，在一个小县城买了房子，娶了本地的姑娘。这个县城对我来说已经不过是见过的众多城市中很小的一个。我却又觉得这个社会好大，好复杂。无所适从。 脚步里，还是免不了的不安，彷徨。
其实我很喜欢雨，在雨点声声里，似乎这个喧嚣的世界也会安静下来，显得祥和，平静。这个世界的浮华，似乎跟着外面的灰尘一样，被荡涤掉了。
但是我也讨厌雨，冬日的冰冷，苦寒，似乎随着雨滴降落到这个世界，慢慢的潜伏到了心里。
这个世界，好冷啊。
昨晚一直处在半睡半醒的状态，混乱的似乎连时间的流逝都搞不清楚了。今天很困，却怎么也睡不着觉。
我却不知道该怎么办了。
其实我早就知道的吧。
今天去吃了豆花饭，一直觉得味道不对，结果才发现是以前最爱吃的豆豉忘了放。</description>
    </item>
    
    <item>
      <title>在Linux下面批量修改文件名字以及内容</title>
      <link>https://hong.im/2013/10/%E5%9C%A8linux%E4%B8%8B%E9%9D%A2%E6%89%B9%E9%87%8F%E4%BF%AE%E6%94%B9%E6%96%87%E4%BB%B6%E5%90%8D%E5%AD%97%E4%BB%A5%E5%8F%8A%E5%86%85%E5%AE%B9/</link>
      <pubDate>Sun, 27 Oct 2013 15:39:41 +0000</pubDate>
      
      <guid>https://hong.im/2013/10/%E5%9C%A8linux%E4%B8%8B%E9%9D%A2%E6%89%B9%E9%87%8F%E4%BF%AE%E6%94%B9%E6%96%87%E4%BB%B6%E5%90%8D%E5%AD%97%E4%BB%A5%E5%8F%8A%E5%86%85%E5%AE%B9/</guid>
      <description>众所周知，sed和awk被称为Linux系统维护的两大瑞士军刀，但是一直没学会……最近遇到批量修改文件的场合，用到了sed，所以记录一下。
批量修改文件名字 for i in `ls`; do mv -f $i `echo $i | sed &#39;s/oldstring/newstring/&#39;`; done  其实上面已经不算是一个语句了，而是通过for循环一个个的取出所有文件名达到遍历的效果。 基本原理是使用echo取得文件名，交给sed替换字符串然后把结果（也就是新的文件名）作为参数回传给mv。 需要注意的是，在shell里面把命令运行结果当作参数引用时，是需要用到 `` （键盘esc下面那个键）把需要引用的部分包围起来的。
批量替换文件内容 sed -i &amp;quot;s/oldstring/newstring/g&amp;quot; `grep -rl oldstring /path/to/dir`  这个其实蛮简单的。说下sed的几个参数。
-i 表示直接把文件编辑掉（默认不会去修改文件内容）。 双引号里面第一个s 的意思是替换，这个应该已经比较明确了。 而最后那个g表示全部替换。  同样的，grep的结果是作为参数传给sed的，所以也需要用 `` 包围起来。其实个人感觉直接来个ls应该也能达到目的。</description>
    </item>
    
    <item>
      <title>《历史是什么》读后感</title>
      <link>https://hong.im/2013/08/%E5%8E%86%E5%8F%B2%E6%98%AF%E4%BB%80%E4%B9%88%E8%AF%BB%E5%90%8E%E6%84%9F/</link>
      <pubDate>Fri, 30 Aug 2013 22:49:25 +0000</pubDate>
      
      <guid>https://hong.im/2013/08/%E5%8E%86%E5%8F%B2%E6%98%AF%E4%BB%80%E4%B9%88%E8%AF%BB%E5%90%8E%E6%84%9F/</guid>
      <description>作为历史研究的经典著作，卡尔从各种方面诠释了历史到底是什么的问题。从我的理解来看，包括下面这些东西：
1.我们所接触到的历史其实并不等同于“过去的事”，而是由历史学家根据自己的理解，选取加工后呈现的部分事实，而且通常掺杂了历史学家的个人思想在里面。进一步因为人是作为社会的个体，所以事实上，历史的呈现与历史学家所处的环境，时代也息息相关。
2.历史事实不光应该关注孤立的个人行为，同时还需要关注到社群的普遍现象。时代的伟人既是历史进程的产物，也是历史进程的推动者，因此值得额外关注。
3.历史具备完整的一般科学研究框架：假设求证，因此历史毋庸置疑是一门社会科学。不过在历史研究中，人既作为研究的主体，又作为被研究的对象。不能用传统的主体，客体概念来严格界限。
4.在历史研究中，虽然历史包含宗教问题，但是不能简单的用宗教来回答历史问题。同样的，在历史中的道德也不应该用一般的绝对道德来衡量，我们只能根据当时的情况判断：对于历史进程是进步还是退步。事实上，卡尔认为“历史是一个斗争的过程，其结果——不管我们把这些结果判断为是好还是坏——是一些群体直接地或间接地。通常是直接多于间接，以牺牲另外一些群体获得的。”
5.历史中是存在因果关系的，我们可以借助历史研究来预言普遍性事件——但是对于个体的孤立事件却无能为力——而恰好很多时候这样的个体事件可能具有很重要的意义。
6.因为历史可以通过一代代的获得性技巧的传授，因此即使有短期的倒退偏离和间断，历史也一定是整体上进步的。
我觉得这里面最有意思的应该是人的自由意志。如果人不具有自由意志，那么我们可以通过研究历史，可以通过模式化预测完全预言现在——无疑这样的现实实在是让人提不起任何的兴趣。而且在这本书里面，人的自由意志占有了非常大的比重，以开篇讨论历史是如何得到的为例：“假如哲学家告诉我们的，我们不能两次踏进同一条河流是正确的话，由于同样的原因，这或许也是正确的：同一位历史学家不能够写出两本完全一样的历史著作”。我相信自由意志带来的个体差异正是历史如此丰富多彩，以及历史这个学科本身存在的意义。
那么人到底有没有自由意志呢？
一方面我们可以很容易的想到，如果单纯的从宏观角度来观察人类的行为。在一个连续的时间轴上，对事件进行无限微分我们可以姑且认为其实人的行为看起来好像是线性连续的——譬如打出这行字我必须连续的移动手到键盘上，然后连续的做出敲击动作。——等等，这岂不是说如果给我们一个足够大计算能力的计算机（我们都知道这个假设目前完全是天方夜谭），如果找到宇宙的初始条件我们完全可以模拟出每个人的状态了？或者说只要找出宇宙一个状态的情况（深入切入历史），我们就可以完整的预言未来？有这么简单么？
现实没有这么简单，也不会如此枯燥。因为如果我们真正开始仔细研究问题，把尺度缩小到量子级别，我们就会掉入海森堡测不准原理的陷阱——既然构成这个世界的基本粒子无法准确预言，那么由这些粒子构成的世界呢？我相信答案应该是我们仍然无法预言——虽然他看起来似乎有一定的宏观逻辑性——要知道经典物理学当时还看起来那么正确呢。 另一个“阴谋论”是因为量子的测不准同时，又出现了更加诡异的量子纠缠——看起来似乎冥冥中有一个高高在上，不属于自然的神明在操控这一切——如果是这样，人类的自由意志那就无疑是扯淡了。
我相信随着物理学和现代生物学的发展，当我们能够准确描述这个宇宙，准确描述人类个体的时候，也就是历史学最大的问题：“具有普遍适用性却无法预言个体随机事件”被解决的时候。
不过至于现在嘛……我们是完全说不清楚到底是不是因为陈独秀出去嫖娼被抓住逐出北大导致了共产党的成立呢。
要是他没被抓住会怎样？哈哈</description>
    </item>
    
    <item>
      <title>配置一台基于openwrt的无线路由器作为纯无线AP使用</title>
      <link>https://hong.im/2013/08/%E9%85%8D%E7%BD%AE%E4%B8%80%E5%8F%B0%E5%9F%BA%E4%BA%8Eopenwrt%E7%9A%84%E6%97%A0%E7%BA%BF%E8%B7%AF%E7%94%B1%E5%99%A8%E4%BD%9C%E4%B8%BA%E7%BA%AF%E6%97%A0%E7%BA%BFap%E4%BD%BF%E7%94%A8/</link>
      <pubDate>Mon, 05 Aug 2013 13:46:38 +0000</pubDate>
      
      <guid>https://hong.im/2013/08/%E9%85%8D%E7%BD%AE%E4%B8%80%E5%8F%B0%E5%9F%BA%E4%BA%8Eopenwrt%E7%9A%84%E6%97%A0%E7%BA%BF%E8%B7%AF%E7%94%B1%E5%99%A8%E4%BD%9C%E4%B8%BA%E7%BA%AF%E6%97%A0%E7%BA%BFap%E4%BD%BF%E7%94%A8/</guid>
      <description>什么是dumb AP以及为什么需要dumb AP 我觉得第一个要解释的是，什么是AP，也就是或者说无线接入点（Wireless Access Point）。
无线接入点可以简单的看做是通过无线提供的集线器。无线路由器会自己构造一个子网然后所有接入用户共享一个出口IP。而无线接入点只提供接入服务（无线的网线），接入客户的路由服务由接入点的上层设备提供。举个栗子：某正常大学某楼分配的是59.64.32.0/24 的一个子网。如果用无线路由器，那么路由器下所有用户没有公网IP，共享一个公网IP出口（59.64.32.x）。而如果使用无线AP，那么通过无线AP连接的每一个用户都能分配到一个公网IP（59.64.32.x）。
对于教育网用户还有一个好处，因为目前大多数路由器并不支持ipv6，所以如果通过无线路由器的方式没办法获得IPV6地址也就上不了传说中的六维什么的少数教育网福利。而通过无线AP模式，则完全由上层设备路由，所以每个通过无线AP连接的用户都能正常获得IPV6地址（猜测，没有实践过）。
另外一个补充就是，因为无线路由器方式共享一个出口IP，所以说适用于共享上网的场景。而无线AP方式因为每个用户都是独立获取IP，所以适合于每个用户都用自己的账号进行上网的场景。
openwrt上对Dumb AP的定义，事实上就是我们所说的AP。这里就不再多说了。
配置openwrt的dumb AP 模式 怎么刷openwrt我就不说了吧……= =
主要参考 OpenWRT 官方Wiki：Dumb AP，但是官方Wiki有少许语焉不明。当然Wiki肯定会被继续完善，不过现在还是先看哥的吧。
修改网络配置文件(/etc/config/network) 因为现在纯无线AP反而比无线路由器贵，所以说一般来讲看这个教程的应该是无线路由器的用户（非无线路由器用户请参考openwrt 官方教程），那么我们需要把WAN口和LAN口桥接起来（如果我没理解错的话）：
config interface lan option type &#39;bridge&#39; option ifname &#39;eth0.1 eth1&#39; # 将vlan1 和 wan桥接起来 option proto &#39;dhcp&#39;  这里需要注意的是，官方教程是把eth0.1和eth1桥接起来，但是事实上很多设备的WAN口不一定是eth1，譬如水星4530r的wan事实上却是eth0.2，所以请自行参考wan口的配置文件，譬如如果wan段如下，那么在lan段就应该是将eth0.1和eth0.2桥接起来，也就是： option ifname &amp;lsquo;eth0.1 eth0.2&amp;rsquo;
config interface wan ... option ifname &#39;eth0.2&#39; ...  桥接起来以后，我们需要禁用本身路由器关于wan口的配置：直接把所有wan，wan6的配置文件部分都注释掉，譬如wan6的配置部分：
#config interface &#39;wan6&#39; # option proto &#39;dhcpv6&#39; # option ifname &#39;@wan&#39;  修改无线配置文件(/etc/config/wireless) 修改完成以后的文件看起来像下面这样：</description>
    </item>
    
    <item>
      <title>教师实践案例自我反思与总结</title>
      <link>https://hong.im/2013/06/%E6%95%99%E5%B8%88%E5%AE%9E%E8%B7%B5%E6%A1%88%E4%BE%8B%E8%87%AA%E6%88%91%E5%8F%8D%E6%80%9D%E4%B8%8E%E6%80%BB%E7%BB%93/</link>
      <pubDate>Sun, 16 Jun 2013 22:42:31 +0000</pubDate>
      
      <guid>https://hong.im/2013/06/%E6%95%99%E5%B8%88%E5%AE%9E%E8%B7%B5%E6%A1%88%E4%BE%8B%E8%87%AA%E6%88%91%E5%8F%8D%E6%80%9D%E4%B8%8E%E6%80%BB%E7%BB%93/</guid>
      <description>除了应付研究生作业以外，其实自己也蛮想写一个文章来总结一下自己这两年来在教学上的跌跌撞撞已经可能获取的一些感悟吧。
“优生”和“差生”之间的区别 首先其实我要感谢学校给我这个机会，在高一上学期，让我带了两个“尖子班”和两个“平行班”。这让我有机会来横向比较这两个比较典型集体之间的差别。当然就这样说优生和差生不是很恰当的说法，我们这里只是针对学生的学习成绩进行的划分。除此之外，知乎上面一个关于为什么中小学成绩比较优秀的原因的问题也给我启发很大。
那“优生”和“差生”的区别在哪儿呢？
首先是基础差别 “优生”和“差生”的初步甄选显然是通过初升高考试来进行划分的，虽然这个考试不能说明所有问题，但是至少这是学校对“优生”，“差生”进行划分的第一道标准，造成的后果就是“优生”明显具有更好的知识基础，同时大部分“优生”还具有更好的思维能力和更强的记忆能力。这就造成“优生”们对新知识的接受要更快一些，同时也具备更好的面对陌生情境进行分析的能力。当然显然光有良好的基础和出众的思维能力还不是能够成为优生的全部条件，很多学生从优秀的成绩大幅下降的也大有人在。那还有哪些因素会影响到一个学生的成长呢。
最重要的自制力 在知乎那个关于中小学成绩优秀原因里面最令我印象深刻的回答是：“其实感觉当时也没怎么特别注意，只是把该做的作业做了，以及把该听的课听了。然后成绩就这样了”。我相信这应该可以引起不少人共鸣，因为当年我就是这么个学生。但是事实上，尤其是在“平行班”里面，作业能够按时按量完成的其实仅仅只在少数。对于这部分学生，课是没法听的，作业自然是没办法做。每天干的事情就是课堂上听天书，课下心情好抄点，心情不好抄作业都懒的做。对于这样的学生，及格都已经是遥不可期的事情，成绩优秀又能从何说起？当然从我这两年的教学中可以欣喜的看到。真正做到按时按量完成作业的学生就算不能成绩优秀至少也是成绩在中上游位置。当然对于部分“优生”而言，除了做到自我约束以外还能做到自省，自我激励，那这部分学生我相信不光是在学校，就是以后在工作中也一定比较容易做到优秀的成绩。
生活经验 个人认为，生活经验，在生活中解决问题的经历，对于学科学习也应该有较大的影响。皮亚杰认为智力的发展（亦即知识的获得）是个人和环境之间不断互动的结果。从这个角度来看，学习早在学生进入学校前就已经发生并且广泛存在。而那些善于在生活中解决问题，寻找问题答案的学生，相比其他不愿意（或者没有机会）动手，思考的学生，相当于自身具备了学习更高深知识的脚手架（以与生活比较接近的譬如物理运动学，化学锈蚀等）。从而能够更加容易的接受新的知识。我相信虽然没有理论依据，但是这应该能够解释为什么在好学生中，乡镇初级中学毕业的学生会具有更好的逻辑思维和理性思维。而城里同学虽然收到了更好的教学手段和素质相对更高教师的教育，却常常沦落到“差生”行列。
内源动力 翻看知乎的问答，可以发现有不在少数的人只是因为当年喜欢某个人而奋发，踏入“优生行列”。“只是希望能和她报同一个学校”。这里不得不提到学生越来越缺乏的改变自身的动力，越来越缺乏的所谓的学习动力。我曾经在班上问过学生，关于为什么要到学校来，关于人生的理想，固然一部分学生因为害羞不愿意回答。但是更多的是看到他们脸上的不以为然。对老一辈学生来说，迫切改变自身的状况成为了最大的学习动力。而对于新一代学生来说，大部分学生衣食无忧，导致没有任何改变自身的期望，动力。导致这部分学生在学校没有任何学习的欲望，动力，从而沦为“差生”。从我这一学期的观察来看，“优生”除了一部分学生的上述的强烈的改变自身的欲望以外，比较突出的表现在于对于某些学科的强烈兴趣，或者强烈的在学习上表现自己的欲望，从而导致了自身的学习动力。当然一开始提到的那部分“因为爱情”的学生能够将爱恋的动力转化为自身进步的动力同样跃升于“优生”行列。
持之以恒的坚持 从我的观察而言，“差生”与“优生”一样同样存在考前焦虑考后沮丧各种心情，在考前以及考试后突然奋发向上的也不在少数。但是这部分学生其实并不明白，或者说明白了却缺乏对应的执行力。罗马并不是一天建成的，同样的道理，学习成绩也不是一天就能搞好的。这部分学生虽然可能因为一时注意到成绩低而懊悔从而奋发，但是却从来不能持之以恒，可能考前一周和考后一周还想着早上6点30就起来背单词，但是没坚持到一周就恢复到以前的懒散，心不在焉。如此的一曝十寒，只能导致一个结果：你看我努力了成绩也提不起来，所以这个没办法啊。所以我还是打瞌睡去吧。这部分学生最喜欢问的问题是：老师如果我把这些方程式都背好了能考多少分？老师我把这个题弄明白了能考多少分？殊不知真正考试中各个知识点是环环相扣的，单个知识点的突破并不一定能够带来考试成绩的提升，同样对学生整体的学术素养提升也同样微乎其微。
教师的角色 我相信在真正进行了比较长时间教学活动以后，我们肯定不会认为，老师肯定不只是简单的改改作业上上课。一个完整的教学活动不仅限于此，那么教师应该做好哪些工作呢？从我个人的实践来看，我认为教师应该扮演好如下这些角色。
教学内容的制定者 我觉得作为教师所应该做到的最基本的工作，也是最传统的工作在于教学内容的制定。教师作为教学活动的组织者，必须要明确教给学生什么内容，以及如何来教。首先是内容的选择，说的不好听一点，我们的教学工作主要是面向高考，所以一开始就是为考好高考而服务的，因此明确高考考什么才能明确我们教什么。这是很无奈的事情。而在全面推行新教材以后，对每一本，尤其是必修一，必修二这两本大而全的教材的教学深度把握上，也成为重中之重。当然因为大部分老师是从旧教材过渡过来的，导致的结果往往是因为讲的较深而导致教学进度无法完成，同时因为期望较短的时间完成较深的内容完成导致教学内容巩固不够，从而导致学生模模糊糊晕头转向。在这两年的教学过程中，我发现对待必修一，二的比较合理的方式应当是只讲授课本上知识不做过多拓展甚至不拓展，以较快速度完成新课教学而将重点放在基础知识的巩固上面。从定位上来讲因为必修一，二是作为基础知识普及的课本出现，只有切实做好基础知识巩固才是对以后教学的最好的铺垫。如果试图加深内容导致时间不够没有时间让学生自己消化巩固，用我们的话说叫“夹生饭”。由于新教材环环相扣的特点，带来的结果可能是毁灭性的。作为教学活动的组织者，还应该做到的是合理安排教学难度渐进，其实不光是在大方向把握上，对于小章节内容的把握上同样需要做到循序渐进，从易到难，符合学生的认知规律。这里面涉及到少量的计算训练，计算技巧的训练，从我的实践和前辈的指导来看，不应该过多过久的着力，而是应该在一次次训练中慢慢渗透，慢慢练习，熟能生巧，不能贪功冒进，罗马不是一天建成的，而学生的计算技巧也不是一天掌握的。这里面比较需要注意的需要反复渗透的个人觉得应该主要用于计算的包括化学方程式中的元素守恒，主要用于方程式配平的氧化还原反应中的得失电子守恒和离子方程式中的电荷守恒。
教学活动的督导者 除了制定教学内容以外，作为整个教学活动的组织者，还应该做好教学活动的督导。首先需要做到的自然是传统的批改作业。掌握学生的学习情况，从而制定合理的学习计划这无疑是至关重要的。但是对于“差生”的教育，做到这点远远不够，因为你会发现，大部分“平行班”学生作业基本上都是敷衍了事。对于这部分学生，我在这两年所见识到的，有通过人格魅力感染的，也有通过高压政策施压的。作为这两项都不具备的我，个人认为通过课堂上给予时间学生练习掌握应该是一个比较好的解决方案——因为有的学生你不看着他强迫他，他真的是完全不会学啊。这也算是中国教育的一个无奈吧。除了通过学生作业来反馈以外，通过课堂上练习的反馈掌握学生情况，并且督促学生发现问题解决问题也是一个非常不错的途径。这里面还涉及到所谓的“极差生”的处理问题。这部分学生行为习惯差，学习习惯没有。这部分学生个人以为保持他们不影响课堂纪律是底线，同时偶尔让他们来完成一些力所能及的习题，期于促进其改观。不过虽然说“没有教不好的学生，只有教不好的老师”对于某些已经形成习惯的学生，就算真要改变付出的劳动也觉对是无法想象的。发达国家的小班额的学生尚且不能杜绝吸毒打架，像中国这种大班额，尤其是我们学校达到了惊人的近80人一班的大班，执念于这类学生无外乎只能导致忽略最希望学习的学生，反而让这部分学生成绩不尽人意。所以，有些大话只能说说而已，或者说听别人说说而已。自己可千万别去践行。
学生学习的监督者 无论怎么说，青少年的自制力相对来说都偏薄弱，所以教师很有必要做好学生学习的监督，督促。在考试前后对学生进行心理疏导，协助学生找出学习中的盲点，漏洞。时刻关注学生作业中反映出的问题，及时给予某些学生积极反馈。必要的时候对学生进行鼓励。这些都是帮助学生取得好成绩所必不可少的。从青少年心理特点出发，其实学生都是非常希望得到关注的，所以多花时间与学生交流沟通，解决学生疑惑，甚至于只是简单鼓励，交流从我实践的结果来看都能够取得不错的成绩。当然交流不能仅仅是轻飘飘的一句：你很不错加油。而是应该从学生的作业，或者课堂习题入手，协助其分析原因，找出思维亮点加以鼓励。同时找出其中的漏洞，盲点加以点拨。这样才能做到让学生信服，真正让学生进步。
学科兴趣培养者 其实我感觉这个有点充数，凑字数的嫌疑。不过我还是想说，其实教师最应该做的是培养学生的学科兴趣吧。对于理科而已，指导学生发现逻辑之美。对于化学，让学生认识到如此缤纷灿烂的世界，仅仅只是由元素周期表里面那100多号元素通过不同排列方式而组成的。我想这本身就是这个学科最吸引人的地方。“化学是最精确的科学，说几分钟就几分钟”。可以说理科是人类试图理解，掌控这个世界而做出的不懈努力。通过学科教学延续知识，最终让人类理解，掌握这个世界，才是我们最终极的目的吧。</description>
    </item>
    
    <item>
      <title>一台基于APU的HTPC</title>
      <link>https://hong.im/2013/06/%E4%B8%80%E5%8F%B0%E5%9F%BA%E4%BA%8Eapu%E7%9A%84htpc/</link>
      <pubDate>Thu, 13 Jun 2013 09:30:25 +0000</pubDate>
      
      <guid>https://hong.im/2013/06/%E4%B8%80%E5%8F%B0%E5%9F%BA%E4%BA%8Eapu%E7%9A%84htpc/</guid>
      <description>一、概述 本文主要定位于如何获得一个可工作的基于APU的HTPC，本文使用的硬件组装于2012年9月16，所以对各位而言，有可能硬件信息已经比较过时。
二、硬件 使用到的硬件如下：
 主板：华擎 双核APU平台E350M1（集成AMD E-350 双核1.6G CPU，集成ATI Radeon HD6310显卡） 价格：￥505（含快递15块～） 机箱：酷冷至尊 魔方 MINI-ITX小机箱USB3.0拉丝铝面板 价格：￥299 内存：南亚易胜（elixir）DDR3 1333 4G 台式机内存 价格：￥99（已大幅涨价） 硬盘1：镁光 32G 固态硬盘 SSD 1.8寸半高 价格：￥188 硬盘2：希捷2TB 2T硬盘64M 7200转 ST2000DM001台式机硬盘 价格：￥660（已大幅降价） 遥控器：挥挥鼠M3 价格：￥158（已降价） 键盘鼠标：Logitech 罗技 MK240 无线键鼠套装 价格：￥99 电源：本地电脑城买的最便宜的电源 价格：￥99  合计：2107。败笔感觉在那小块固态硬盘上……感觉没太大必要。同时在有遥控器的情况下，无线键鼠套装基本就是在角落积灰，也没太大必要。这套系统的性能瓶颈应该在CPU上……真是……伤神呢。不过那个遥控器还真是满好用的，推荐。
个人认为优势在于：
 系统自由度更高一些，可以自主选择Linux或者Windows。 采用魔方机箱的好处在于盘位较多，可以自由升级。而且散热什么的也比较给力。 采用APU一体板的好处在于，在能耗相对较低的情况（没有实测，但是整机功耗应该在30W左右）下，用比较低的价格做到了HTPC和NAS的合体。  优势其实一句话说到底就是自由度吧……DIY的，谁不是想自由度高一些呢……
相对来说，因为全部采用新硬件，可能性价比并不是那么突出。当然肯定是可以通过旧硬件重用或者淘宝二手CPU什么的做到更高的性价比。不过一是图一个新，另一个是新硬件相对来说功耗更低一点（没有考虑过Intel平台，求不喷），要更稳定一些……
三、软件解决方案 1、系统：Windows 8 在一开始尝试过蛮多系统（好吧，就是win 7，Win 8 和一堆linux发行版），其实如果主要应用是NAS，Linux应该是一个很不错的选择，但是一旦涉及到高清播放……我只能说Linux完完全全是渣渣啊。不过随着AMD发布开源 UVD 支持，Linux下面的高清播放支持倒是值得期待（表示我还没有尝试。）
然后win7 和win 8之间，因为个人认为win 8的欢迎屏幕更适合我的电视……加上win 8确实有一些驱动，性能上的提升，所以最终确定下来就是win 8了。
2、视频播放：PotPlayer+XBMC 这里采用XBMC解决在线视频播放的问题。为了播放国内视频网站的视频，XBMC中文插件库是一定要安装的，请自行参考：xbmc-addons-chinese。除此之外，XBMC还真没啥好说的……不过优酷，搜获超清什么的，在我的51寸大电视上那是相当爽啊。</description>
    </item>
    
    <item>
      <title>一小撮不明真相的群众</title>
      <link>https://hong.im/2013/05/%E4%B8%80%E5%B0%8F%E6%92%AE%E4%B8%8D%E6%98%8E%E7%9C%9F%E7%9B%B8%E7%9A%84%E7%BE%A4%E4%BC%97/</link>
      <pubDate>Sun, 12 May 2013 21:53:08 +0000</pubDate>
      
      <guid>https://hong.im/2013/05/%E4%B8%80%E5%B0%8F%E6%92%AE%E4%B8%8D%E6%98%8E%E7%9C%9F%E7%9B%B8%E7%9A%84%E7%BE%A4%E4%BC%97/</guid>
      <description>我们先关注两条消息：
“大家注意！今天是腾讯新任董事长陈佳明上任，他为了感谢广大QQ用户，只要把这个消息连发五个群，你就会连升4级。反正也没什么坏处，发完10秒钟，看看你的头像。”
然后是这条消息：
“请大家5月13号一定别进影院，大家一起为《贞子》票房为零，做努力！ 中国人拍的《金陵十三钗》在日本小鬼子票房为零。小日本拍的《贞子》3D将于5月12日在中国大陆上映。而5月12日既是南京大屠杀纪念日，谁的群多，转一下，日本人说中国人是垃圾，不团结，今天腾讯公司和日本人打赌，如果在两周内转发超过两百万个群的话，日本人就是垃圾，（是中国人的就转发！)”
我们首先注意到第一条消息。首先犯了一个常识错误。腾讯从创建马化腾就是老板了……虽然低调，但是人家还当的好好的。个人认为，转发这种诅咒人家CEO换代的消息，如果我是腾讯就应该一个降10级。打成小星星！
然后注意到第二条消息，同样有一个常识性错误。稍微动用下搜索引擎，就会发现南京大屠杀的时间是1937年12月13日—1938年1月。所以南京大屠杀纪念日被定为每年12月13日。然后是第二个常识错误：贞子的上映日期：2012-05-12(日本) / 2012-06-14(香港) / 2012-08-31(台湾)。对你会发现，贞子事实上根本没在中国上映，甚至相关媒体在去年（是的，去年……）还专门做了相关报道：《贞子3D》中国不上映 微博抵制属炒作。所以说这条消息最后的一个问题就是，时效性。贞子3D不光是没在中国上映，即使上映现在也早就下线了。试问激情转发的各位，如何去抵制一个不在影院上映的影片呢。
如此明显错误的消息，为什么能够在QQ群中存活如此之久（映像中，从6-7年前我上高中那会就开始腾讯董事长过生日了……）有这么多的人——其中不乏大学校友群，中学教师群这样理应明辨是非的人在里面四处转发呢。
自己想想，无非是贪图蝇头小利，以及偶尔爆发的屁民的正义春（意外的发现，阿里布达年代祭里面这个词在这里格外的好用）。再加上宁可信其有不可信其无的围观群众的精神才造就了这样的垃圾信息的大量泛滥。
在这个信息大爆炸的时代，显然我们的人民还没有对信息洪流做好准备。
只希望，少点这样的“不明真相的群众”才好点呢。不管制造谣言的源头是什么目的，作为传播者对自己的言论真实性有所担当，有所责任，应该是互联网时代的基本伦理吧。
我倒是更喜欢谣言止于智者这个词。</description>
    </item>
    
    <item>
      <title>高流量大并发Linux TCP 性能调优</title>
      <link>https://hong.im/2013/04/%E9%AB%98%E6%B5%81%E9%87%8F%E5%A4%A7%E5%B9%B6%E5%8F%91linux-tcp-%E6%80%A7%E8%83%BD%E8%B0%83%E4%BC%98/</link>
      <pubDate>Sat, 20 Apr 2013 00:23:43 +0000</pubDate>
      
      <guid>https://hong.im/2013/04/%E9%AB%98%E6%B5%81%E9%87%8F%E5%A4%A7%E5%B9%B6%E5%8F%91linux-tcp-%E6%80%A7%E8%83%BD%E8%B0%83%E4%BC%98/</guid>
      <description>呃……标题比较隐晦。其实主要是手里面的跑openvpn服务器。因为并没有明文禁p2p（哎……想想那么多流量好像不跑点p2p也跑不完），所以造成有的时候如果有比较多人跑BT的话，会造成VPN速度急剧下降。
本文参考文章为：
优化Linux下的内核TCP参数来提高服务器负载能力
Linux Tuning
本文所面对的情况为：
 高并发数 高延迟高丢包（典型的美国服务器）  值得注意的是，因为openvz的VPS权限比较低，能够修改的地方比较少，所以使用openvz的VPS作VPN服务器是非常不推荐的。
我们通过修改 /etc/sysctl.conf 来达到调整的目的，注意修改完以后记得使用：
sysctl -p  来使修改生效。
首先，针对高并发数，我们需要提高一些linux的默认限制:
fs.file-max = 51200 #提高整个系统的文件限制 net.ipv4.tcp_syncookies = 1 #表示开启SYN Cookies。当出现SYN等待队列溢出时，启用cookies来处理，可防范少量SYN攻击，默认为0，表示关闭； net.ipv4.tcp_tw_reuse = 1 #表示开启重用。允许将TIME-WAIT sockets重新用于新的TCP连接，默认为0，表示关闭； net.ipv4.tcp_tw_recycle = 0 #表示开启TCP连接中TIME-WAIT sockets的快速回收，默认为0，表示关闭； #为了对NAT设备更友好，建议设置为0。 net.ipv4.tcp_fin_timeout = 30 #修改系統默认的 TIMEOUT 时间。 net.ipv4.tcp_keepalive_time = 1200 #表示当keepalive起用的时候，TCP发送keepalive消息的频度。缺省是2小时，改为20分钟。 net.ipv4.ip_local_port_range = 10000 65000 #表示用于向外连接的端口范围。缺省情况下很小：32768到61000，改为10000到65000。（注意：这里不要将最低值设的太低，否则可能会占用掉正常的端口！） net.ipv4.tcp_max_syn_backlog = 8192 #表示SYN队列的长度，默认为1024，加大队列长度为8192，可以容纳更多等待连接的网络连接数。 net.ipv4.tcp_max_tw_buckets = 5000 #表示系统同时保持TIME_WAIT的最大数量，如果超过这个数字，TIME_WAIT将立刻被清除并打印警告信息。 #额外的，对于内核版本新于**3.7.1**的，我们可以开启tcp_fastopen： net.ipv4.tcp_fastopen = 3  其次，针对大流量高丢包高延迟的情况，我们通过增大缓存来提高TCP性能，自己看E文注释吧……感觉我翻译出来各种味道不对 = =：</description>
    </item>
    
    <item>
      <title>2012年春期总结</title>
      <link>https://hong.im/1/01/2012%E5%B9%B4%E6%98%A5%E6%9C%9F%E6%80%BB%E7%BB%93/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://hong.im/1/01/2012%E5%B9%B4%E6%98%A5%E6%9C%9F%E6%80%BB%E7%BB%93/</guid>
      <description>转眼这个学期已经过了一大半了。距离学期结束还只有一个月时间。外面的布告栏已经贴出了期末考试的安排。于是怎么说都觉得这学期已经是快过了的样子。
回顾一下这一学期吧，感觉终于还是摆脱了上一学期那种基本上迷茫基本上没有方向的状态。但是教学上依然不明朗，班主任工作也感觉没那么给力。结果就是最近几次考试，化学垫底，就连班级总体情况也是垫底。哎。
但是还是有很多事情感觉需要总结一下。
教学上来讲，其实我发现我的一个很大的问题在于对于整个高中的知识脉络没有一个清晰的认识，对于应该让学生做些什么，注意些什么很没有头绪。 其实这个学期已经没有上学期那么多听课了，因为自己觉得，其实老教师的表达并不是都那么清楚的，老教师最擅长的其实是在知识内容的把握上——什么该要求什么不该要求，什么应该讲多深，如何去阐述。除了表述的方式以外，其他的内容感觉其实应该跟个人的积累有很大的关系了，所以其实多做做题才是关键所在吧？（啊喂喂，不要给自己不听课找借口啊-0-）。说道这里其实这学期很惭愧，一直没有做到讲课前先做完所有相关练习，导致有些课真的是上的马马虎虎，愧对观众。哎。通过这一学期的教学，得出的另外一个结论是——果然新老师还是得自己默一遍流程才好。这学期以来，第一堂出的太多差错，到第二堂才有所弥补的机会。下学期不要这样了才好。
对于班主任工作，好吧说起班主任工作其实要先感谢很多人。首先得说的吧，就是经常给我介绍媳妇的师傅（。。。。）。好吧我师傅其实挺可爱的，你们不要黑他的说。经常不厌其烦的给我讲解新课的思路，最重要的是完全没有达到他的期望，也没有怎么责怪我，倒是经常跑到年级组长那里为我开脱，哎。不过说起师傅自然不能少了化学组的各位其他师傅，像是明明是有点黄的洪老师（咳咳。。。），还有很洋气的黄老师，经常给我东西吃（好吧我承认是我强的）群姐，各种知识（咳咳……）都很丰富的付老师，还有不常出现的刘老师。然后大家还每次都特别有默契的一致吐糟我大师傅（咳咳）。
然后就是宋老师了。这学期经常出现hold不住班上的事情，像是中午午休吵啊，上课同学顶撞老师啊，清洁没有要求好啊。很多时候都是宋老师直接找到同学谈话，然后还特有效。其实从宋老师身上我感觉学到了很多，比如说某些事情学生比较激动的时候要冷处理，比如说虽然还在看所谓的积极心理学却不知道用表扬的方式去批评学生。从他身上我看到了作为班主任的艺术。看到了自己确实还差的远啊。 最后其实还是得感谢下年长（怎么都觉得有点阿谀奉承的味道- -//）。作为一个什么都不懂的小班主任，作为一个经常把应该做的事情忘在一边的小糊涂。要做这样的班主任的领导还真是不容易啊。是吧。
其他的就不说了，今天跟学生交谈了一下，发现其实自己作为一个班主任，最为欠缺的还是那一点威严。有的事情是不需要解释的，学生这样给我说。所以其实我还是没能把角色转变过来么？。
希望下学期继续努力嗯。</description>
    </item>
    
    <item>
      <title>ATI显卡高清视频播放</title>
      <link>https://hong.im/1/01/ati%E6%98%BE%E5%8D%A1%E9%AB%98%E6%B8%85%E8%A7%86%E9%A2%91%E6%92%AD%E6%94%BE/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://hong.im/1/01/ati%E6%98%BE%E5%8D%A1%E9%AB%98%E6%B8%85%E8%A7%86%E9%A2%91%E6%92%AD%E6%94%BE/</guid>
      <description>前一个月手痒没忍住，入了AMD的E350 APU平台，主板加电源加硬盘加机箱一共花了1K左右，作为一个30W多一点的HTPC+NAS解决方案感觉还是不错的。至于装配过程就没啥好说的了，就一块板子插上电源拧上螺丝。走线神码的，乃们自己去看chiphell上面那些大神耍帅吧。
既然要作为NAS，显然跑Linux就是一个合理的选择了，不过地球人都知道Linux下的高清硬解神码的，跟Windows比就是战斗力只有5的渣渣啊。
废话不多说，ATI的开源显卡驱动并不支持高清视频硬解，当然它可能在不久的将来到来，不过，你就翘着脖子等着吧。另外不要相信之前文章说高清视频播放开源驱动比闭源驱动开硬解资源占用要低。我如果用开源驱动只能勉强搞定720P。1080P。哦买噶。完全是幻灯片啊。
闭源驱动搞得比较纠结，安装就按Arch的官方wiki 来的。不过当真正开始硬解的时候有一点点小问题：
smplayer：我使用官方源中的mplayer-vaapi极易崩溃。基本无法使用，如果使用mplayer2的话，则又不能开启硬解。所以虽然我也很喜欢smplayer但是……不给面子没办法……
vlc: VLC则能够轻松搞定1080p重编码（CPU占用两个核心都稳定在50%），但是10BIT会出现大量色块，其中包括德艺双馨的波多野结衣的那个4G多的mp4文件。要搞定vlc的硬解，arch WIKI上的并不完整，还需要额外参考VLC关于硬解的官方文档 修改一下环境变量。具体文档说的挺清楚了不再赘述，不过你并不需要重新编译ffmpeg和vlc，也就是只需要添加好环境变量就好。我的所有视频中有两个REMUX的ts文件播放出来是黑屏莫名其妙。
XBMC: XBMC与VLC类似，但是能搞定那两个REMUX的ts文件。另外我开始XBMC莫名其妙没有声音很是奇怪。
总而言之，E350集成显卡的硬件加速也就算是恰好凑合能用吧。有兴趣的自己倒腾倒腾。我下一步开始配置transmission，samba和dnsmasq了。</description>
    </item>
    
    <item>
      <title>StoryTime</title>
      <link>https://hong.im/1/01/storytime/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://hong.im/1/01/storytime/</guid>
      <description>前一篇各种理性的文章写了1千多字夭折了。所以这篇文章果断流水帐算了，理性什么的。最劳累了。
一边听着夜愿的StoryTime一边码字。那天去买耳机，我说我听夜愿，那个小哥说，你还听啊，自从换了主唱我就再也没听过了。之所以还抓着不放，只是因为每次听到都想到T姐离开，往昔已然随风吧。
就跟文艺小青年失恋以后，虽然明知道昨日不可追，但是还是不断泥足深陷。仅仅是因为怀恋昔日美好而已。
其实恋爱跟别的一样也需要练习，只是令人悲伤的是，每次我们都不得不更换合作伙伴。
破镜难圆。
The End Of An Era。
时代终结，恍如隔世。
好吧。似乎写了很奇怪的东西。大约是因为没有把到妹子郁闷的吧。
大约是我自己还是有很多事情没想明白吧。
死性理派什么的，活着最累了。
突然想到这么一句话，大约是这样吧。
我只是不想错过你最好的年华而已。
另外在自己鸟不拉屎的博客自怨自艾这种事情，还真是屌丝啊。</description>
    </item>
    
    <item>
      <title>在CentOS上搭建pptp服务器并使用radius进行账户认证</title>
      <link>https://hong.im/1/01/%E5%9C%A8centos%E4%B8%8A%E6%90%AD%E5%BB%BApptp%E6%9C%8D%E5%8A%A1%E5%99%A8%E5%B9%B6%E4%BD%BF%E7%94%A8radius%E8%BF%9B%E8%A1%8C%E8%B4%A6%E6%88%B7%E8%AE%A4%E8%AF%81/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://hong.im/1/01/%E5%9C%A8centos%E4%B8%8A%E6%90%AD%E5%BB%BApptp%E6%9C%8D%E5%8A%A1%E5%99%A8%E5%B9%B6%E4%BD%BF%E7%94%A8radius%E8%BF%9B%E8%A1%8C%E8%B4%A6%E6%88%B7%E8%AE%A4%E8%AF%81/</guid>
      <description>感觉主流的VPN服务器里面pptp应该是最简单的了。总结下吧。本来没想搞这个的。可惜ipv4下的openvpn根本就是被我伟大的防火墙秒杀。所以先配个用着吧。
系统环境：centos 6.3 x86_64 xen虚拟机（我会炫耀说是樱花的么 = =）
安装相关软件 首先需要安装ppp和pptp以及radius认证库radiusclient-ng，ppp和radiusclient-ng在官方源里面有，所以直接安装就行了：
yum -y install ppp radiusclient-ng  这里需要说一下的就是大部分教程都要求安装radiusclient而非radiusclient-ng。但是如果到radiusclient-ng的官方页面你会发现radiusclient-ng其实就是radiusclient的后续版本，最新的radiusclient已经是05年的了，虽然似乎不影响使用，但是真的是太老太老了。
pptpd直接安装sourceforge上提供的二进制版本就好了，这里是64位版本，如果你要安装32位版本把尾巴的x86_64改成i686就好了，如果是centos5的话，自己改咯：
rpm -ivh http://poptop.sourceforge.net/yum/stable/packages/pptpd-1.3.4-2.el6.x86_64.rpm  修改相关配置 备份是个好习惯，不过其实这里没太大必要备份了= =：
mv /etc/ppp/options.pptpd /etc/ppp/options.pptpd.bak vi /etc/ppp/options.pptpd  在option.pptpd里面写入相关的配置：
name pptpd refuse-pap refuse-chap refuse-mschap require-mschap-v2 require-mppe-128 proxyarp lock nobsdcomp novj novjccomp nologfd idle 2592000 ms-dns 8.8.8.8 ms-dns 8.8.4.4 #下面是radius认证需要的库以及配置文件 #同样的，如果您是32位系统应该将lib64改为lib plugin /usr/lib64/pppd/2.4.5/radius.so plugin /usr/lib64/pppd/2.4.5/radattr.so radius-config-file /etc/radiusclient-ng/radiusclient.conf  修改/etc/pptpd.conf
mv /etc/pptpd.conf /etc/pptpd.conf.bak vi /etc/pptpd.conf  其实需要改动的很少，其他还有一些譬如限制同时在线人数的，请自己阅读原始的pptpd.conf：
option /etc/ppp/options.pptpd #下面是指定服务器使用的IP localip 192.</description>
    </item>
    
    <item>
      <title>在wr841n上刷openwrt并使用openvpn自动VPN</title>
      <link>https://hong.im/1/01/%E5%9C%A8wr841n%E4%B8%8A%E5%88%B7openwrt%E5%B9%B6%E4%BD%BF%E7%94%A8openvpn%E8%87%AA%E5%8A%A8vpn/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://hong.im/1/01/%E5%9C%A8wr841n%E4%B8%8A%E5%88%B7openwrt%E5%B9%B6%E4%BD%BF%E7%94%A8openvpn%E8%87%AA%E5%8A%A8vpn/</guid>
      <description>刚出来工作就买了一个WR841ND。最开始其实没咋倒腾，因为dd-wrt虽然功能多但是用到的不多，反而配置太多看着头晕，而开始倒腾openwrt的时候又觉得openwrt的界面太难看&amp;mdash;不想动。所以其实一直是官方固件。不过最近由于斯巴达的即将召开，导致Google搜索基本上来讲完全瘫痪，而恰好又买了一个香港的VPS。所以决定倒腾倒腾让路由器直接连VPN然后智能路由。
硬件信息：TP-Link TL-WR841ND v7.1
注意：一下操作要求一定的linux基础和一定动手能力，所以请务必谋定而动。
##首先是刷上openwrt
刷新之前请注意：目前trunk中的openwrt默认没有启用web界面，虽然最新稳定版openwrt发布已经支持wr841n(d)了，但是我还是喜欢trunk……因为trunk里面没有我用不到的web界面……又可以节省好多K的空间装其他东西……
从官方固件刷到openwrt是很简单的。直接从trunk下载适用于wr841nd的固件 然后通过官方固件的web界面中升级固件更新就行了。
现在你最好telnet过去修改密码，这样会禁用telnet而启用ssh。当然如果你是在太懒这个其实也无所谓啦。
##配置网络
现在你需要配置好网络，请参考：openwrt 官方wiki关于网络配置的说明 。如果是 静态IP ，那么示例如下：
uci set network.wan.proto=static //表示使用静态IP。 uci set network.wan.ipaddr=192.168.100.111 //我使用的是联通光猫。开了路由功能。所以可以直接静态IP。 uci set network.wan.netmask=255.255.255.0 uci set network.wan.gateway=192.168.100.1 uci set network.wan.dns=&#39;8.8.8.8 8.8.4.4&#39; uci commit network ifup wan  当然其实直接编辑/etc/config/network是一条更快的捷径,以下以 pppoe拨号 为例，与静态IP不同，我们一定要注意设定openwrt不通过ppp获得运营商的DNS，否则挂上VPN以后几乎一定会因为运营商DNS延迟更低而选择使用运营商DNS从而不能避免DNS污染，我们只修改wan段：
config interface &#39;wan&#39; option ifname &#39;eth1&#39; option proto &#39;pppoe&#39; //表示使用pppoe拨号 option username &#39;dsl11xxxxxxxx&#39; //pppoe帐号 option password &#39;xxxxxx&#39; //pppoe密码 option peerdns &#39;0&#39; //表示不从运营商获取DNS，很重要！ option dns &#39;8.8.8.8 8.8.4.4&#39;  配置好网络以后你可以试一下ping 8.</description>
    </item>
    
    <item>
      <title>林纳斯 Just For Fun读书笔记</title>
      <link>https://hong.im/1/01/%E6%9E%97%E7%BA%B3%E6%96%AF-just-for-fun%E8%AF%BB%E4%B9%A6%E7%AC%94%E8%AE%B0/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://hong.im/1/01/%E6%9E%97%E7%BA%B3%E6%96%AF-just-for-fun%E8%AF%BB%E4%B9%A6%E7%AC%94%E8%AE%B0/</guid>
      <description>刚看完林纳斯自传，于是来交读书笔记。
对一本传记说什么文字优美情节曲折似乎都是不合适的吧。但是这确实是一本很有趣的传记，因为林纳斯是一个很有趣的人。因为他的价值观很有趣。
他把人的追求分为了生存，社会关系，和寻找乐趣。毋庸置疑，保证生存是一切的基础，当人类还是动物的时候，就已经为这个目标而奋斗不止了。但是当我们能活下来，高枕无忧的时候呢？
这个时候我们希望维持各种社会关系，朋友，家人，爱人。爱人与被爱。那社会关系是最终追求吗？也不是。
当我们能够维持稳定的社会关系以后，我们的终极目标在于娱乐。追八卦故事，跑去世界漫游，或者是与爱人共赏夕阳。虽然这几件事情风马牛不相及，但是无疑，都是我们追求的终极目标：寻找快乐。
如果能这么想，那么那些勤俭一辈子，辛苦工作一辈子的人，就算最后获得再高的成功再高的财富再高的声望，但显然是很明确的，过了失败的一生了——因为他的人生目标恰恰被本末倒置了。
而，林纳斯从开发Linux到坚持领导Linux开发这么久，无疑也只是因为，这件事情看起来很有趣而已。
我认为林纳斯自己最引以为傲的，有两件事情。而似乎都与linux没有特别的联系。 第一个就是促使了开源理念的普及。正是linux风靡全球，才让世界上很多人明白，原来还有开放源代码共享这回事情。就算以后现在的所有开源项目都终将消失或者被替代，但是至少，以后人们会知道，原来还有开放源代码，多人协作这回事情。 原来我们还可以以不以封闭管理的方式，来促成一个项目，而且（通常能够）获得比封闭开发更好的代码质量和最终效果。
第二个就是作为一个卓越的领导者，领导了世界上最大的多人协作项目。说林纳斯是史上最伟大的黑客——显然算不上，林纳斯并不算是发明轮子的人，只能算是一个使用轮子而且用的还比较好的人而已。不过linux能够蓬勃发展到今天，显然主要要归功于这位linux之父的卓越管理：不偏不倚，敢于放权，并且避免自闭和过度商业化。——这远比发明linux重要的多，这也是为什么那个各种操作系统并起但最终只有linux（抱歉还有mac os和windows以及现在已经不愠不火的unix）成长到现在并且蓬勃发展的原因了。 至于林纳斯为什么要为linux付出这么做？那是因为，这样确实是一件很有趣的事情呢。</description>
    </item>
    
    <item>
      <title>环形使者观后感</title>
      <link>https://hong.im/1/01/%E7%8E%AF%E5%BD%A2%E4%BD%BF%E8%80%85%E8%A7%82%E5%90%8E%E6%84%9F/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://hong.im/1/01/%E7%8E%AF%E5%BD%A2%E4%BD%BF%E8%80%85%E8%A7%82%E5%90%8E%E6%84%9F/</guid>
      <description>本来准备看完睡一觉然后参加集体腐败。结果躺下接了个电话就再也睡不着了，于是干脆起来把影评写了算了。
环形使者其实还是炒了下时空穿越，这一个科幻界经久不衰而又老掉牙的剧情。
我感觉这里面最重要的一个概念就是，闭环。为什么叫闭环呢？从布鲁斯威利斯那段话我们可以得出一个结论，事实上，对于一个穿越的人来说，他穿越回他的“当下”以后，那么这段时间就成为了一种各种可能都存在的“模糊”，但是一旦“闭环”成功，那对于这个人而言，这段时间就成为一个环，只要一直保证闭环成功，那么这段时间就一直是一个封闭的回路，不会有其他的可能发生。也就是说，闭环其实是把多种可能变成只有唯一事实。
但是对我们的主人公，老年的joe因为妻子被杀而奋起反抗，就造成了闭环失败，从而使他的这中间这段岁月回归到混沌。
事实上，结尾处已经清晰的显示，如果让老年joe杀掉莎拉，那么事实上，那段时间也会成为一个环，从而导致以后的各种杯具（唤雨师疯狂追杀流浪者，老年joe因为妻子被杀而想回到过去杀掉幼时的唤雨师，因为错杀莎拉而造就唤雨师）。于是我算是看明白了。不知道还有谁看明白没？
对于其他剧情而言，我想说的是，当下的国产电影何时才能做到不靠大制作不靠卖肉卖八卦，而只是做到电影的基本要求，主题清楚而又剧情丰满呢？</description>
    </item>
    
    <item>
      <title>阿里布达年代祭终于完结了（附下载）</title>
      <link>https://hong.im/1/01/%E9%98%BF%E9%87%8C%E5%B8%83%E8%BE%BE%E5%B9%B4%E4%BB%A3%E7%A5%AD%E7%BB%88%E4%BA%8E%E5%AE%8C%E7%BB%93%E4%BA%86%E9%99%84%E4%B8%8B%E8%BD%BD/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://hong.im/1/01/%E9%98%BF%E9%87%8C%E5%B8%83%E8%BE%BE%E5%B9%B4%E4%BB%A3%E7%A5%AD%E7%BB%88%E4%BA%8E%E5%AE%8C%E7%BB%93%E4%BA%86%E9%99%84%E4%B8%8B%E8%BD%BD/</guid>
      <description>作为一个小学四年级开始就已经学会从图书馆借鬼故事在回家路上打发时间的正牌宅男来说。自以为看过的小说其实已经不少了。至今留下映像最深的，有从高中一直看到大学才看完的诛仙，整整连载了四年，可惜公认后面烂尾了。然后是刘慈欣的《三体》，作为中国近代科幻的奠基之作，应该说近期的长篇科幻小说也应该无出其右者。但是同样很可惜的是，大家公认在第三部刘慈欣也同样没有HOLD住。至于出了两部就直接夭折的《风月大陆》，现在回想起来里面庞大的设定和展开，也只有遗憾的份了。 但是今天终于知道，连载了十一年的《阿里布达年代祭》终于是落下帷幕了。
最开始看阿里，我记得是在什么“四十部情色小说，绝对查禁”里面看到的，所以有的时候还真得感谢各种有关部门给我们列出这么详细的读书计划……-0-。最开始拿到没有在意，因为觉得展开有点混乱。直到有一次实在无聊开始看以后，才一发不可收拾。 抛开情色成分不说——很可惜我发现挖去情色成分的洁本看起来差了好多味道——阿里里面出色的想象，宏大的展开，以及罗森特色的现实与虚幻结合，都让阿里成为了一部非常有特色的小说。而且无论如何，连载十一年，完全没有明显烂尾，这本身已经是个奇迹了是吧。
所以，无论如何，终于我可以给阿里打上一个已完结的标签了。
PS：写之前写了一个阿里要完结了……结果还没发完博文在留园找到大结局了…于是偷偷把标题中的要自删掉…这算什么水平
附下载： 百度网盘：阿里布达年代祭-完结.zip | 迅雷快传：阿里布达年代祭-完结.zip
来源：Text456 | 留园
如果您喜欢请支持作者——虽然我目前为止也没找到支持作者的方法……。</description>
    </item>
    
  </channel>
</rss>